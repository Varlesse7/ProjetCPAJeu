{"ast":null,"code":"import * as conf from './conf';\nconst COLORS = {\n  RED: '#ff0000',\n  GREEN: '#00ff00',\n  BLUE: '#0000ff'\n};\nconst toDoubleHexa = n => n < 16 ? '0' + n.toString(16) : n.toString(16);\nexport const rgbaTorgb = (rgb, alpha = 0) => {\n  let r = 0;\n  let g = 0;\n  let b = 0;\n  if (rgb.startsWith('#')) {\n    const hexR = rgb.length === 7 ? rgb.slice(1, 3) : rgb[1];\n    const hexG = rgb.length === 7 ? rgb.slice(3, 5) : rgb[2];\n    const hexB = rgb.length === 7 ? rgb.slice(5, 7) : rgb[3];\n    r = parseInt(hexR, 16);\n    g = parseInt(hexG, 16);\n    b = parseInt(hexB, 16);\n  }\n  if (rgb.startsWith('rgb')) {\n    const val = rgb.replace(/(rgb)|\\(|\\)| /g, '');\n    const splitted = val.split(',');\n    r = parseInt(splitted[0]);\n    g = parseInt(splitted[1]);\n    b = parseInt(splitted[2]);\n  }\n  r = Math.max(Math.min(Math.floor((1 - alpha) * r + alpha * 255), 255), 0);\n  g = Math.max(Math.min(Math.floor((1 - alpha) * g + alpha * 255), 255), 0);\n  b = Math.max(Math.min(Math.floor((1 - alpha) * b + alpha * 255), 255), 0);\n  return `#${toDoubleHexa(r)}${toDoubleHexa(g)}${toDoubleHexa(b)}`;\n};\nconst clear = ctx => {\n  const {\n    height,\n    width\n  } = ctx.canvas;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, width, height);\n};\nconst drawCirle = (ctx, {\n  x,\n  y\n}, color) => {\n  ctx.beginPath();\n  ctx.fillStyle = color;\n  ctx.arc(x, y, 5, 0, 2 * Math.PI);\n  ctx.fill();\n};\nconst drawObjCircle = (ctx, {\n  coord,\n  radius\n}, color) => {\n  ctx.beginPath();\n  ctx.fillStyle = color;\n  ctx.arc(coord.x, coord.y, radius, 0, 2 * Math.PI);\n  ctx.fill();\n};\nconst drawWall = (ctx, {\n  leftTop,\n  rightBottom\n}, r, g, b) => {\n  ctx.beginPath();\n  ctx.fillStyle = `rgb(\n        ${Math.floor(r)}\n        ${Math.floor(g)}\n        ${Math.floor(b)}\n        )`;\n  ctx.fillRect(leftTop.x, leftTop.y, rightBottom.x - leftTop.x, rightBottom.y - leftTop.y);\n  ctx.fill();\n};\nconst drawHero = (ctx, {\n  x,\n  y\n}, {\n  hx,\n  hy\n}, r, g, b) => {\n  ctx.beginPath();\n  ctx.fillStyle = `rgb(\n        ${Math.floor(r)}\n        ${Math.floor(g)}\n        ${Math.floor(b)}\n        )`;\n  ctx.fillRect(x - hx / 2, y - hx / 2, hx, hy);\n  ctx.fill();\n};\nconst computeColor = (life, maxLife, baseColor) => rgbaTorgb(baseColor, (maxLife - life) * (1 / maxLife));\nexport const render = ctx => state => {\n  clear(ctx);\n  state.pos.map(c => drawCirle(ctx, c.coord, computeColor(c.life, conf.BALLLIFE, COLORS.GREEN)));\n  state.objectC.map(oc => drawObjCircle(ctx, oc, COLORS.RED));\n  state.objectR.map(or => drawWall(ctx, or, 255, 0, 0));\n  state.tirs.map(tir => drawCirle(ctx, tir.coord, COLORS.GREEN));\n  state.debris.map(debri => drawObjCircle(ctx, debri, COLORS.RED));\n  drawHero(ctx, state.hero.coord, state.hero.hitBox, 0, 255, 0);\n  state.limite.map(w => drawWall(ctx, w, 245, 184, 135));\n  if (state.endOfGame) {\n    const text = 'END';\n    ctx.font = '48px arial';\n    ctx.strokeText(text, state.size.width / 2 - 200, state.size.height / 2);\n  }\n};","map":{"version":3,"names":["conf","COLORS","RED","GREEN","BLUE","toDoubleHexa","n","toString","rgbaTorgb","rgb","alpha","r","g","b","startsWith","hexR","length","slice","hexG","hexB","parseInt","val","replace","splitted","split","Math","max","min","floor","clear","ctx","height","width","canvas","fillStyle","fillRect","drawCirle","x","y","color","beginPath","arc","PI","fill","drawObjCircle","coord","radius","drawWall","leftTop","rightBottom","drawHero","hx","hy","computeColor","life","maxLife","baseColor","render","state","pos","map","c","BALLLIFE","objectC","oc","objectR","or","tirs","tir","debris","debri","hero","hitBox","limite","w","endOfGame","text","font","strokeText","size"],"sources":["D:/varlesse/Documents/GitHub/try/ProjetCPAWEB/web/src/components/canvas/renderer.ts"],"sourcesContent":["import * as conf from './conf'\r\nimport { State, Point, Coord } from './state'\r\nconst COLORS = {\r\n  RED: '#ff0000',\r\n  GREEN: '#00ff00',\r\n  BLUE: '#0000ff',\r\n}\r\n\r\nconst toDoubleHexa = (n: number) =>\r\n  n < 16 ? '0' + n.toString(16) : n.toString(16)\r\n\r\nexport const rgbaTorgb = (rgb: string, alpha = 0) => {\r\n  let r = 0\r\n  let g = 0\r\n  let b = 0\r\n  if (rgb.startsWith('#')) {\r\n    const hexR = rgb.length === 7 ? rgb.slice(1, 3) : rgb[1]\r\n    const hexG = rgb.length === 7 ? rgb.slice(3, 5) : rgb[2]\r\n    const hexB = rgb.length === 7 ? rgb.slice(5, 7) : rgb[3]\r\n    r = parseInt(hexR, 16)\r\n    g = parseInt(hexG, 16)\r\n    b = parseInt(hexB, 16)\r\n  }\r\n  if (rgb.startsWith('rgb')) {\r\n    const val = rgb.replace(/(rgb)|\\(|\\)| /g, '')\r\n    const splitted = val.split(',')\r\n    r = parseInt(splitted[0])\r\n    g = parseInt(splitted[1])\r\n    b = parseInt(splitted[2])\r\n  }\r\n\r\n  r = Math.max(Math.min(Math.floor((1 - alpha) * r + alpha * 255), 255), 0)\r\n  g = Math.max(Math.min(Math.floor((1 - alpha) * g + alpha * 255), 255), 0)\r\n  b = Math.max(Math.min(Math.floor((1 - alpha) * b + alpha * 255), 255), 0)\r\n  return `#${toDoubleHexa(r)}${toDoubleHexa(g)}${toDoubleHexa(b)}`\r\n}\r\n\r\nconst clear = (ctx: CanvasRenderingContext2D) => {\r\n  const { height, width } = ctx.canvas\r\n  ctx.fillStyle = 'white'\r\n  ctx.fillRect(0, 0, width, height)\r\n}\r\n\r\nconst drawCirle = (\r\n  ctx: CanvasRenderingContext2D,\r\n  { x, y }: { x: number; y: number },\r\n  color: string\r\n) => {\r\n  ctx.beginPath()\r\n  ctx.fillStyle = color\r\n  ctx.arc(x, y, 5, 0, 2 * Math.PI)\r\n  ctx.fill()\r\n}\r\n\r\nconst drawObjCircle = (\r\n  ctx: CanvasRenderingContext2D,\r\n  { coord, radius }: { coord: Coord; radius: number },\r\n  color: string\r\n) => {\r\n  ctx.beginPath()\r\n  ctx.fillStyle = color\r\n  ctx.arc(coord.x, coord.y, radius, 0, 2 * Math.PI)\r\n  ctx.fill()\r\n}\r\n\r\nconst drawWall = (\r\n  ctx: CanvasRenderingContext2D,\r\n  {leftTop, rightBottom}: {leftTop:Point, rightBottom:Point},\r\n  r : number,\r\n  g : number,\r\n  b : number\r\n) => {\r\n  ctx.beginPath()\r\n  ctx.fillStyle = `rgb(\r\n        ${Math.floor(r)}\r\n        ${Math.floor(g)}\r\n        ${Math.floor(b)}\r\n        )`;\r\n  ctx.fillRect(leftTop.x,leftTop.y, rightBottom.x-leftTop.x, rightBottom.y-leftTop.y  )\r\n  ctx.fill()\r\n}\r\n\r\nconst drawHero = (\r\n  ctx: CanvasRenderingContext2D,\r\n  {x, y}: {x:number, y:number},\r\n  {hx, hy}: {hx:number, hy:number},\r\n  r : number,\r\n  g : number,\r\n  b : number\r\n) => {\r\n  ctx.beginPath()\r\n  ctx.fillStyle = `rgb(\r\n        ${Math.floor(r)}\r\n        ${Math.floor(g)}\r\n        ${Math.floor(b)}\r\n        )`;\r\n  ctx.fillRect(x-hx/2,y-hx/2, hx, hy)\r\n  ctx.fill()\r\n}\r\n\r\nconst computeColor = (life: number, maxLife: number, baseColor: string) =>\r\n  rgbaTorgb(baseColor, (maxLife - life) * (1 / maxLife))\r\n\r\nexport const render = (ctx: CanvasRenderingContext2D) => (state: State) => {\r\n  clear(ctx)\r\n\r\n  state.pos.map((c) =>\r\n    drawCirle(ctx, c.coord, computeColor(c.life, conf.BALLLIFE, COLORS.GREEN))\r\n  )\r\n  \r\n  state.objectC.map( (oc) => \r\n    drawObjCircle(ctx, oc, COLORS.RED)\r\n  )\r\n  state.objectR.map( (or) => \r\n    drawWall(ctx, or, 255, 0, 0)\r\n  )\r\n  state.tirs.map( (tir) => \r\n    drawCirle (ctx, tir.coord, COLORS.GREEN))\r\n\r\n  state.debris.map( (debri) =>\r\n    drawObjCircle(ctx, debri, COLORS.RED)\r\n  )\r\n  \r\n  drawHero(ctx, state.hero.coord, state.hero.hitBox,  0, 255, 0);\r\n\r\n  state.limite.map( (w) =>\r\n    drawWall(ctx, w, 245, 184, 135)\r\n  )\r\n  \r\n  if (state.endOfGame) {\r\n    const text = 'END'\r\n    ctx.font  = '48px arial'\r\n    ctx.strokeText(text, state.size.width / 2 - 200, state.size.height / 2)\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}