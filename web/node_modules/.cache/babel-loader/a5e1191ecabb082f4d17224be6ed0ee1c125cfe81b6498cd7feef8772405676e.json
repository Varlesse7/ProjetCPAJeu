{"ast":null,"code":"import * as conf from './conf';\n// Mur de droite = 1 et Mur haut = 0 et Mur gauche = 2  \n\nconst randomInt = max => Math.floor(Math.random() * max);\nconst randomSign = () => Math.sign(Math.random() - 0.5);\nconst dist2 = (o1, o2) => Math.pow(o1.x - o2.x, 2) + Math.pow(o1.y - o2.y, 2);\nconst iterate = bound => ball => {\n  return {\n    ...ball,\n    coord: {\n      ...ball.coord,\n      x: ball.coord.x + ball.coord.dx,\n      y: ball.coord.y + ball.coord.dy\n    }\n  };\n};\nconst mouvDebris = bound => ball => {\n  return {\n    ...ball,\n    coord: {\n      ...ball.coord,\n      x: ball.coord.x + ball.coord.dx,\n      y: ball.coord.y + ball.coord.dy\n    }\n  };\n};\nconst mouvTirD = bound => rect => {\n  return {\n    ...rect,\n    coord: {\n      ...rect.coord,\n      x: rect.coord.x + rect.coord.dx,\n      y: rect.coord.y + rect.coord.dy\n    }\n  };\n};\nexport const click = state => event => {\n  const {\n    offsetX,\n    offsetY\n  } = event;\n  const target = state.pos.find(p => dist2(p.coord, {\n    x: offsetX,\n    y: offsetY,\n    dx: 0,\n    dy: 0\n  }) < Math.pow(conf.RADIUS, 2) + 100);\n  if (target) {\n    target.coord.dx += Math.random() * 10;\n    target.coord.dy += Math.random() * 10;\n  }\n  return state;\n};\nconst collideBOC = (b, oc) => dist2(b, {\n  x: oc.coord.x,\n  y: oc.coord.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS + oc.radius, 2);\nconst collideROC = (h, oc) => {\n  const hx = h.coord.x;\n  const hy = h.coord.y;\n  const hw = h.hitBox.hx;\n  const hh = h.hitBox.hy;\n  const cx = oc.coord.x;\n  const cy = oc.coord.y;\n  const cr = oc.radius;\n  const nearestX = Math.max(hx - hw / 2, Math.min(cx, hx + hw / 2));\n  const nearestY = Math.max(hy - hh / 2, Math.min(cy, hy + hh / 2));\n  const distX = cx - nearestX;\n  const distY = cy - nearestY;\n  return distX * distX + distY * distY <= cr * cr;\n};\nconst collideBORR = (b, or) => dist2(b, {\n  x: or.rightBottom.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.rightBottom.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.rightBottom.x,\n  y: b.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) && b.y > or.leftTop.y && b.y < or.rightBottom.y;\nconst collideBORL = (b, or) => dist2(b, {\n  x: or.leftTop.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.leftTop.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.leftTop.x,\n  y: b.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) && b.y > or.leftTop.y && b.y < or.rightBottom.y;\nconst collideBORU = (b, or) => dist2(b, {\n  x: or.rightBottom.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.leftTop.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: b.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) && b.x > or.leftTop.x && b.x < or.rightBottom.x;\nconst collideBORB = (b, or) => dist2(b, {\n  x: or.leftTop.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.rightBottom.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: b.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) && b.x > or.leftTop.x && b.x < or.rightBottom.x;\nconst collide = (o1, o2) => dist2(o1, o2) < Math.pow(2 * conf.RADIUS, 2);\nconst collideboing = (p1, p2) => {\n  const nx = (p2.x - p1.x) / (2 * conf.RADIUS);\n  const ny = (p2.y - p1.y) / (2 * conf.RADIUS);\n  const gx = -ny;\n  const gy = nx;\n  const v1g = gx * p1.dx + gy * p1.dy;\n  const v2n = nx * p2.dx + ny * p2.dy;\n  const v2g = gx * p2.dx + gy * p2.dy;\n  const v1n = nx * p1.dx + ny * p1.dy;\n  p1.dx = nx * v2n + gx * v1g;\n  p1.dy = ny * v2n + gy * v1g;\n  p2.dx = nx * v1n + gx * v2g;\n  p2.dy = ny * v1n + gy * v2g;\n  p1.x += p1.dx;\n  p1.y += p1.dy;\n  p2.x += p2.dx;\n  p2.y += p2.dy;\n};\nconst collideboingS = (p1, p2) => {\n  const nx = (p2.coord.x - p1.x) / (2 * conf.RADIUS);\n  const ny = (p2.coord.y - p1.y) / (2 * conf.RADIUS);\n  const gx = -ny;\n  const gy = nx;\n  const v1g = gx * p1.dx + gy * p1.dy;\n  const v1n = nx * p1.dx + ny * p1.dy;\n  p1.dx -= 2 * nx + gx * v1g;\n  p1.dy -= 2 * ny + gy * v1g;\n  p1.x += p1.dx;\n  p1.y += p1.dy;\n};\nexport const step = state => {\n  state.pos.map((p1, i, arr) => {\n    arr.slice(i + 1).map(p2 => {\n      if (collide(p1.coord, p2.coord)) {\n        if (!p1.invincible) {\n          p1.life--;\n          p1.invincible = 20;\n        }\n        if (!p2.invincible) {\n          p2.life--;\n          p2.invincible = 20;\n        }\n        collideboing(p1.coord, p2.coord);\n      }\n    });\n  });\n  state.pos.map(p1 => {\n    state.objectR.map(w => {\n      p1.coord.dx = collideBORR(p1.coord, w) || collideBORL(p1.coord, w) ? -p1.coord.dx : p1.coord.dx;\n      p1.coord.dy = collideBORU(p1.coord, w) || collideBORB(p1.coord, w) ? -p1.coord.dy : p1.coord.dy;\n    });\n  });\n  state.pos.map(p1 => {\n    state.objectC.map(c => {\n      if (collideBOC(p1.coord, c)) {\n        collideboingS(p1.coord, c);\n      }\n    });\n  });\n\n  // Gestion du délai de tir\n  const shootingDelay = 60;\n  if (state.shootCooldownHero <= 0) {\n    state.tirs.push({\n      life: 1,\n      coord: {\n        x: state.hero.coord.x,\n        y: state.hero.coord.y,\n        dx: 0,\n        dy: -2\n      }\n    });\n    state.shootCooldownHero = shootingDelay;\n  } else {\n    state.shootCooldownHero--;\n  }\n\n  //Gestion du délai d'apparition d'ennemis\n  const appearanceDelay = 100;\n  if (state.ennemyDelay <= 0) {\n    switch (randomInt(2)) {\n      case 1:\n        //possibilité d'algo de gravité\n        state.debris.push({\n          coord: {\n            x: randomInt(window.innerWidth - (120 + 2 * conf.BOUNDLEFT)) + (60 + conf.BOUNDLEFT),\n            y: 0,\n            dx: 0,\n            dy: 2\n          },\n          radius: 25,\n          life: 2 // faire un truc en fonction du rayon pour la vie\n        });\n        break;\n      case 2:\n        state.ennemisQuiTire.push({\n          coord: {\n            x: randomInt(window.innerWidth - (120 + 2 * conf.BOUNDLEFT)) + (60 + conf.BOUNDLEFT),\n            y: 0,\n            dx: 0,\n            dy: 4\n          },\n          width: 50,\n          height: 50,\n          life: 2 //possibilité de modifier la vie\n        });\n        break;\n      default:\n        break;\n    }\n    state.ennemyDelay = appearanceDelay;\n  } else {\n    state.ennemyDelay--;\n  }\n\n  //Collision débris - tir\n  state.tirs.map(p1 => {\n    state.debris.map(c => {\n      if (collideBOC(p1.coord, c)) {\n        p1.life--;\n        c.life--;\n      }\n    });\n  });\n  if (state.hero.vie == 0) {\n    state.hero.coord.x = 1;\n    state.endOfGame = true;\n  }\n\n  //Collision debri-héros\n  state.debris.map(d => {\n    if (collideROC(state.hero, d)) {\n      d.life = 0;\n      state.hero.vie--;\n    }\n  });\n  return {\n    ...state,\n    pos: state.pos.map(iterate(state.size)).filter(p => p.life > 0),\n    tirs: state.tirs.map(iterate(state.size)).filter(p => p.coord.y > 0 && p.life > 0),\n    debris: state.debris.map(mouvDebris(state.size)).filter(p => p.coord.y < window.innerHeight && p.life > 0),\n    endOfGame: state.endOfGame\n  };\n};\nexport const handleKeyPress = state => event => {\n  const stepx = state.hero.coord.dx;\n  const stepy = state.hero.coord.dy;\n  const ax = state.hero.coord.x;\n  const ay = state.hero.coord.y;\n  const hx = state.hero.hitBox.hx / 2;\n  const hy = state.hero.hitBox.hy / 2;\n  switch (event.key) {\n    case \"Z\":\n    case \"z\":\n      console.log(state.limite);\n      if (ay - stepy - hy > state.limite[0].rightBottom.y) {\n        return {\n          ...state,\n          hero: {\n            ...state.hero,\n            coord: {\n              ...state.hero.coord,\n              y: ay - stepy\n            }\n          }\n        };\n      }\n      return state;\n    case \"s\":\n    case \"S\":\n      console.log(\"s\");\n      if (ay + stepy + hy < state.limite[3].leftTop.y) {\n        return {\n          ...state,\n          hero: {\n            ...state.hero,\n            coord: {\n              ...state.hero.coord,\n              y: ay + stepy\n            }\n          }\n        };\n      }\n      return state;\n    case \"q\":\n    case \"Q\":\n      console.log(\"q\");\n      if (ax - stepx - hx > state.limite[1].rightBottom.x) {\n        return {\n          ...state,\n          hero: {\n            ...state.hero,\n            coord: {\n              ...state.hero.coord,\n              x: ax - stepx\n            }\n          }\n        };\n      }\n      return state;\n    case \"d\":\n    case \"D\":\n      console.log(\"d\");\n      if (ax + stepx + hx < state.limite[2].leftTop.x) {\n        return {\n          ...state,\n          hero: {\n            ...state.hero,\n            coord: {\n              ...state.hero.coord,\n              x: ax + stepx\n            }\n          }\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\nexport const mouseMove = state => event => {\n  return state;\n};\nexport const endOfGame = state => true;","map":{"version":3,"names":["conf","randomInt","max","Math","floor","random","randomSign","sign","dist2","o1","o2","pow","x","y","iterate","bound","ball","coord","dx","dy","mouvDebris","mouvTirD","rect","click","state","event","offsetX","offsetY","target","pos","find","p","RADIUS","collideBOC","b","oc","radius","collideROC","h","hx","hy","hw","hitBox","hh","cx","cy","cr","nearestX","min","nearestY","distX","distY","collideBORR","or","rightBottom","leftTop","collideBORL","collideBORU","collideBORB","collide","collideboing","p1","p2","nx","ny","gx","gy","v1g","v2n","v2g","v1n","collideboingS","step","map","i","arr","slice","invincible","life","objectR","w","objectC","c","shootingDelay","shootCooldownHero","tirs","push","hero","appearanceDelay","ennemyDelay","debris","window","innerWidth","BOUNDLEFT","ennemisQuiTire","width","height","vie","endOfGame","d","size","filter","innerHeight","handleKeyPress","stepx","stepy","ax","ay","key","console","log","limite","mouseMove"],"sources":["D:/varlesse/Documents/GitHub/try/ProjetCPAWEB/web/src/components/canvas/state.ts"],"sourcesContent":["import { useEffect } from 'react';\r\nimport * as conf from './conf'\r\nexport type Coord = { x: number; y: number; dx: number; dy: number }\r\nexport type Point = {x:number; y: number}\r\ntype Ball = { coord: Coord; life: number; invincible?: number }\r\ntype Size = { height: number; width: number }\r\ntype Wall = { leftTop:Point, rightBottom:Point}\r\ntype ObjectCercle = {coord: Coord; radius: number; life: number}\r\ntype Rectangle = {coord: Coord, width:number, height:number, life: number}\r\ntype Hero = {coord: Coord, hitBox: {hx: number, hy: number}, vie: number, force : number}\r\n\r\n// Mur de droite = 1 et Mur haut = 0 et Mur gauche = 2  \r\n\r\nconst randomInt = (max: number) => Math.floor(Math.random() * max)\r\nconst randomSign = () => Math.sign(Math.random() - 0.5)\r\n\r\nexport type State = {\r\n  hero : Hero\r\n  pos: Array<Ball>\r\n  limite: Array<Wall>\r\n  objectC: Array<ObjectCercle>\r\n  objectR: Array<Wall>\r\n  size: Size\r\n  endOfGame: boolean\r\n  tirs: Array<Ball>\r\n  debris: Array<ObjectCercle>\r\n  ennemisQuiTire: Array<Rectangle>\r\n  shootCooldownHero : number\r\n  ennemyDelay : number\r\n}\r\n\r\nconst dist2 = (o1: Coord, o2: Coord) =>\r\n  Math.pow(o1.x - o2.x, 2) + Math.pow(o1.y - o2.y, 2)\r\n\r\nconst iterate = (bound: Size) => (ball: Ball) => {\r\n  \r\n  return {\r\n    ...ball, \r\n    coord: {\r\n      ...ball.coord,\r\n      x: ball.coord.x + ball.coord.dx,\r\n      y: ball.coord.y + ball.coord.dy,\r\n    },\r\n  }\r\n}\r\n\r\nconst mouvDebris = (bound: Size) => (ball: ObjectCercle) => {\r\n  \r\n  return {\r\n    ...ball, \r\n    coord: {\r\n      ...ball.coord,\r\n      x: ball.coord.x + ball.coord.dx,\r\n      y: ball.coord.y + ball.coord.dy,\r\n    },\r\n  }\r\n}\r\n\r\nconst mouvTirD = (bound: Size) => (rect: Rectangle) => {\r\n  \r\n  return {\r\n    ...rect, \r\n    coord: {\r\n      ...rect.coord,\r\n      x: rect.coord.x + rect.coord.dx,\r\n      y: rect.coord.y + rect.coord.dy,\r\n    },\r\n  }\r\n}\r\n\r\n\r\nexport const click =\r\n  (state: State) =>\r\n  (event: PointerEvent): State => {\r\n    const { offsetX, offsetY } = event\r\n    const target = state.pos.find(\r\n      (p) =>\r\n        dist2(p.coord, { x: offsetX, y: offsetY, dx: 0, dy: 0 }) <\r\n        Math.pow(conf.RADIUS, 2) + 100\r\n    )\r\n    if (target) {\r\n      target.coord.dx += Math.random() * 10\r\n      target.coord.dy += Math.random() * 10\r\n    }\r\n    return state\r\n  }\r\n\r\n\r\nconst collideBOC = (b:Coord, oc:ObjectCercle) => \r\n  dist2(b, {x: oc.coord.x, y: oc.coord.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS+oc.radius, 2)\r\n\r\nconst collideROC = (h: Hero, oc: ObjectCercle) => {\r\n  const hx = h.coord.x;\r\n  const hy = h.coord.y;\r\n  const hw = h.hitBox.hx;\r\n  const hh = h.hitBox.hy;\r\n  const cx = oc.coord.x;\r\n  const cy = oc.coord.y;\r\n  const cr = oc.radius;\r\n  const nearestX = Math.max(hx - hw / 2, Math.min(cx, hx + hw / 2));\r\n  const nearestY = Math.max(hy - hh / 2, Math.min(cy, hy + hh / 2));\r\n  const distX = cx - nearestX;\r\n  const distY = cy - nearestY;\r\n  return (distX * distX + distY * distY) <= (cr * cr);\r\n};\r\n  \r\n  \r\nconst collideBORR = (b:Coord, or:Wall) => \r\n  ((dist2(b, {x: or.rightBottom.x, y: or.leftTop.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \r\n  (dist2(b, {x: or.rightBottom.x, y: or.rightBottom.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2))) || \r\n  (dist2(b, {x: or.rightBottom.x, y:b.y, dx:0, dy:0}) < Math.pow(conf.RADIUS,2) && b.y > or.leftTop.y && b.y < or.rightBottom.y)\r\n\r\nconst collideBORL = (b:Coord, or: Wall) => \r\n  (dist2(b, {x: or.leftTop.x, y: or.rightBottom.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \r\n  (dist2(b, {x: or.leftTop.x, y: or.leftTop.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \r\n  (dist2(b, {x: or.leftTop.x, y:b.y, dx:0, dy:0}) < Math.pow(conf.RADIUS,2) && b.y > or.leftTop.y && b.y < or.rightBottom.y)\r\n\r\nconst collideBORU = (b:Coord, or:Wall) =>\r\n  (dist2(b, {x: or.rightBottom.x, y: or.leftTop.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \r\n  (dist2(b, {x: or.leftTop.x, y: or.leftTop.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \r\n  (dist2(b, {x: b.x, y:or.leftTop.y, dx:0, dy:0}) < Math.pow(conf.RADIUS,2) && b.x > or.leftTop.x && b.x < or.rightBottom.x) \r\n\r\n\r\nconst collideBORB = (b:Coord, or:Wall) =>\r\n  (dist2(b, {x: or.leftTop.x, y: or.rightBottom.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \r\n  (dist2(b, {x: or.rightBottom.x, y: or.rightBottom.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \r\n  (dist2(b, {x: b.x, y:or.rightBottom.y, dx:0, dy:0}) < Math.pow(conf.RADIUS,2) && b.x > or.leftTop.x && b.x < or.rightBottom.x) \r\n\r\n\r\nconst collide = (o1: Coord, o2: Coord) =>\r\n  dist2(o1, o2) < Math.pow(2 * conf.RADIUS, 2)\r\n\r\nconst collideboing = (p1: Coord, p2: Coord) => {\r\n  const nx = (p2.x - p1.x) / (2 * conf.RADIUS)\r\n  const ny = (p2.y - p1.y) / (2 * conf.RADIUS)\r\n  const gx = -ny\r\n  const gy = nx\r\n\r\n  const v1g = gx * p1.dx + gy * p1.dy\r\n  const v2n = nx * p2.dx + ny * p2.dy\r\n  const v2g = gx * p2.dx + gy * p2.dy\r\n  const v1n = nx * p1.dx + ny * p1.dy\r\n  p1.dx = nx * v2n + gx * v1g\r\n  p1.dy = ny * v2n + gy * v1g\r\n  p2.dx = nx * v1n + gx * v2g\r\n  p2.dy = ny * v1n + gy * v2g\r\n  p1.x += p1.dx\r\n  p1.y += p1.dy\r\n  p2.x += p2.dx\r\n  p2.y += p2.dy\r\n}\r\n\r\nconst collideboingS = (p1: Coord, p2:ObjectCercle) => {\r\n  const nx = (p2.coord.x-p1.x) / (2 * conf.RADIUS)\r\n  const ny = (p2.coord.y-p1.y) / (2 * conf.RADIUS)\r\n  const gx = -ny\r\n  const gy = nx\r\n\r\n  const v1g = gx * p1.dx + gy * p1.dy\r\n  const v1n = nx * p1.dx + ny * p1.dy\r\n  p1.dx -= 2 * nx  + gx * v1g\r\n  p1.dy -= 2 * ny  + gy * v1g\r\n  p1.x += p1.dx\r\n  p1.y += p1.dy\r\n  \r\n}\r\n\r\nexport const step = (state: State) => {\r\n    \r\n  state.pos.map((p1, i, arr) => {\r\n    arr.slice(i + 1).map((p2) => {\r\n      if (collide(p1.coord, p2.coord)) {\r\n        if (!p1.invincible) {\r\n          p1.life--\r\n          p1.invincible = 20\r\n        }\r\n        if (!p2.invincible) {\r\n          p2.life--\r\n          p2.invincible = 20\r\n        }\r\n        collideboing(p1.coord, p2.coord)\r\n      }\r\n    })\r\n  })\r\n\r\n  state.pos.map((p1) => {\r\n    state.objectR.map((w) => {\r\n      p1.coord.dx = \r\n      (collideBORR(p1.coord, w) || collideBORL(p1.coord, w)\r\n      ? -p1.coord.dx\r\n      : p1.coord.dx)\r\n      p1.coord.dy = \r\n      (collideBORU(p1.coord, w) || collideBORB(p1.coord, w)\r\n      ? -p1.coord.dy\r\n      : p1.coord.dy)\r\n    })\r\n  })\r\n  \r\n  state.pos.map((p1) => {\r\n    state.objectC.map((c) => {\r\n      if (collideBOC(p1.coord, c)){\r\n        collideboingS(p1.coord, c)\r\n      }\r\n    })\r\n  })\r\n\r\n  // Gestion du délai de tir\r\n  const shootingDelay = 60; \r\n\r\n  if (state.shootCooldownHero <= 0) {\r\n    state.tirs.push({\r\n      life: 1,\r\n      coord: {\r\n        x: state.hero.coord.x,\r\n        y: state.hero.coord.y,\r\n        dx: 0,\r\n        dy: -2,\r\n      },\r\n    });\r\n    state.shootCooldownHero = shootingDelay;\r\n  } else {\r\n    state.shootCooldownHero--;\r\n  }\r\n\r\n  //Gestion du délai d'apparition d'ennemis\r\n  const appearanceDelay = 100;\r\n  if (state.ennemyDelay <= 0) {\r\n    \r\n    switch (randomInt(2)){\r\n\r\n      case 1 :\r\n        //possibilité d'algo de gravité\r\n        state.debris.push(\r\n          {coord:{\r\n            x: randomInt(window.innerWidth - (120+(2*conf.BOUNDLEFT))) + (60+conf.BOUNDLEFT),\r\n            y: 0,\r\n            dx:0, \r\n            dy:2},\r\n          radius : 25,\r\n          life : 2 // faire un truc en fonction du rayon pour la vie\r\n        });\r\n        break;\r\n\r\n      case 2 :\r\n        state.ennemisQuiTire.push(\r\n          {coord: {\r\n            x: randomInt(window.innerWidth - (120+(2*conf.BOUNDLEFT))) + (60+conf.BOUNDLEFT),\r\n            y: 0,\r\n            dx:0, \r\n            dy:4 },\r\n          width:50, \r\n          height:50, \r\n          life: 2 //possibilité de modifier la vie\r\n          }\r\n        )\r\n        break;\r\n\r\n      default : \r\n        break\r\n\r\n    }\r\n\r\n    \r\n    state.ennemyDelay = appearanceDelay;\r\n  } else {\r\n    state.ennemyDelay--;\r\n  }\r\n\r\n  //Collision débris - tir\r\n  state.tirs.map((p1) => {\r\n    state.debris.map((c) => {\r\n      if (collideBOC(p1.coord, c)){\r\n        p1.life--\r\n        c.life--\r\n      }\r\n    })\r\n  })\r\n\r\n  if(state.hero.vie == 0) {\r\n    state.hero.coord.x =1\r\n    state.endOfGame = true\r\n  }\r\n\r\n  //Collision debri-héros\r\n  state.debris.map((d) => {\r\n    if (collideROC(state.hero,d)) {\r\n      d.life = 0\r\n      state.hero.vie --;\r\n    }\r\n\r\n  })\r\n\r\n\r\n  return {\r\n    ...state,\r\n    pos: state.pos.map(iterate(state.size)).filter((p) => p.life > 0),\r\n    tirs: state.tirs.map(iterate(state.size)).filter((p) => p.coord.y > 0 && p.life > 0),\r\n    debris: state.debris.map(mouvDebris(state.size)).filter((p) => p.coord.y < window.innerHeight && p.life > 0),\r\n    endOfGame: state.endOfGame,\r\n  }\r\n}\r\n\r\nexport const handleKeyPress = \r\n  (state: State) =>\r\n    (event: KeyboardEvent):State => { \r\n        const stepx = state.hero.coord.dx;\r\n        const stepy = state.hero.coord.dy;\r\n        const ax = state.hero.coord.x;\r\n        const ay = state.hero.coord.y;\r\n        const hx = state.hero.hitBox.hx/2;\r\n        const hy = state.hero.hitBox.hy/2;\r\n        switch (event.key) {\r\n          case \"Z\":\r\n          case \"z\":\r\n            console.log(state.limite)\r\n            \r\n            if (ay - stepy - hy > state.limite[0].rightBottom.y){\r\n              return {...state, hero:{...state.hero, coord: {...state.hero.coord, y: ay - stepy}}}\r\n            }\r\n            return state;\r\n          case \"s\":\r\n          case \"S\":\r\n            console.log(\"s\")\r\n            if (ay + stepy+ hy< state.limite[3].leftTop.y){\r\n              return {...state, hero:{...state.hero, coord: {...state.hero.coord, y: ay + stepy}}}\r\n            }\r\n            return state;\r\n          case \"q\":\r\n          case \"Q\":\r\n            console.log(\"q\")\r\n            if (ax - stepx - hx> state.limite[1].rightBottom.x){\r\n              return {...state, hero:{...state.hero, coord: {...state.hero.coord, x: ax - stepx}}}\r\n            }\r\n            return state;\r\n          case \"d\":\r\n          case \"D\":\r\n            console.log(\"d\")\r\n            if (ax + stepx + hx < state.limite[2].leftTop.x){\r\n              return {...state, hero:{...state.hero, coord: {...state.hero.coord, x: ax + stepx}}}\r\n            }\r\n            return state;\r\n          default : \r\n            return state\r\n        }\r\n      }\r\n\r\nexport const mouseMove =\r\n  (state: State) =>\r\n  (event: PointerEvent): State => {\r\n    return state\r\n  }\r\n\r\nexport const endOfGame = (state: State): boolean => true\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}