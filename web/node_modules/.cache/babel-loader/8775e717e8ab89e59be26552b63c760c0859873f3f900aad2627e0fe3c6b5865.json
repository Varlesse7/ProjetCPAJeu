{"ast":null,"code":"import * as conf from './conf';\ntype;\n\n// Mur de droite = 1 et Mur haut = 0 et Mur gauche = 2  \n\nconst randomInt = max => Math.floor(Math.random() * max);\nconst dist2 = (o1, o2) => Math.pow(o1.x - o2.x, 2) + Math.pow(o1.y - o2.y, 2);\nconst iterate = bound => ball => {\n  return {\n    ...ball,\n    coord: {\n      ...ball.coord,\n      x: ball.coord.x + ball.coord.dx,\n      y: ball.coord.y + ball.coord.dy\n    }\n  };\n};\nconst mouvDebris = bound => ball => {\n  return {\n    ...ball,\n    coord: {\n      ...ball.coord,\n      x: ball.coord.x + ball.coord.dx,\n      y: ball.coord.y + ball.coord.dy\n    }\n  };\n};\nexport const click = state => event => {\n  const {\n    offsetX,\n    offsetY\n  } = event;\n  const target = state.pos.find(p => dist2(p.coord, {\n    x: offsetX,\n    y: offsetY,\n    dx: 0,\n    dy: 0\n  }) < Math.pow(conf.RADIUS, 2) + 100);\n  if (target) {\n    target.coord.dx += Math.random() * 10;\n    target.coord.dy += Math.random() * 10;\n  }\n  return state;\n};\nconst collideBOC = (b, oc) => dist2(b, {\n  x: oc.coord.x,\n  y: oc.coord.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS + oc.radius, 2);\nconst collideROC = (h, oc) => {\n  const hx = h.coord.x;\n  const hy = h.coord.y;\n  const hw = h.hitBox.hx;\n  const hh = h.hitBox.hy;\n  const cx = oc.coord.x;\n  const cy = oc.coord.y;\n  const cr = oc.radius;\n  const nearestX = Math.max(hx - hw / 2, Math.min(cx, hx + hw / 2));\n  const nearestY = Math.max(hy - hh / 2, Math.min(cy, hy + hh / 2));\n  const distX = cx - nearestX;\n  const distY = cy - nearestY;\n  return distX * distX + distY * distY <= cr * cr;\n};\nconst collideBORR = (b, or) => dist2(b, {\n  x: or.rightBottom.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.rightBottom.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.rightBottom.x,\n  y: b.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) && b.y > or.leftTop.y && b.y < or.rightBottom.y;\nconst collideBORL = (b, or) => dist2(b, {\n  x: or.leftTop.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.leftTop.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.leftTop.x,\n  y: b.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) && b.y > or.leftTop.y && b.y < or.rightBottom.y;\nconst collideBORU = (b, or) => dist2(b, {\n  x: or.rightBottom.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.leftTop.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: b.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) && b.x > or.leftTop.x && b.x < or.rightBottom.x;\nconst collideBORB = (b, or) => dist2(b, {\n  x: or.leftTop.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.rightBottom.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: b.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) && b.x > or.leftTop.x && b.x < or.rightBottom.x;\nconst collide = (o1, o2) => dist2(o1, o2) < Math.pow(2 * conf.RADIUS, 2);\nconst collideboing = (p1, p2) => {\n  const nx = (p2.x - p1.x) / (2 * conf.RADIUS);\n  const ny = (p2.y - p1.y) / (2 * conf.RADIUS);\n  const gx = -ny;\n  const gy = nx;\n  const v1g = gx * p1.dx + gy * p1.dy;\n  const v2n = nx * p2.dx + ny * p2.dy;\n  const v2g = gx * p2.dx + gy * p2.dy;\n  const v1n = nx * p1.dx + ny * p1.dy;\n  p1.dx = nx * v2n + gx * v1g;\n  p1.dy = ny * v2n + gy * v1g;\n  p2.dx = nx * v1n + gx * v2g;\n  p2.dy = ny * v1n + gy * v2g;\n  p1.x += p1.dx;\n  p1.y += p1.dy;\n  p2.x += p2.dx;\n  p2.y += p2.dy;\n};\nconst collideboingS = (p1, p2) => {\n  const nx = (p2.coord.x - p1.x) / (2 * conf.RADIUS);\n  const ny = (p2.coord.y - p1.y) / (2 * conf.RADIUS);\n  const gx = -ny;\n  const gy = nx;\n  const v1g = gx * p1.dx + gy * p1.dy;\n  const v1n = nx * p1.dx + ny * p1.dy;\n  p1.dx -= 2 * nx + gx * v1g;\n  p1.dy -= 2 * ny + gy * v1g;\n  p1.x += p1.dx;\n  p1.y += p1.dy;\n};\nexport const step = state => {\n  state.pos.map((p1, i, arr) => {\n    arr.slice(i + 1).map(p2 => {\n      if (collide(p1.coord, p2.coord)) {\n        if (!p1.invincible) {\n          p1.life--;\n          p1.invincible = 20;\n        }\n        if (!p2.invincible) {\n          p2.life--;\n          p2.invincible = 20;\n        }\n        collideboing(p1.coord, p2.coord);\n      }\n    });\n  });\n  state.pos.map(p1 => {\n    state.objectR.map(w => {\n      p1.coord.dx = collideBORR(p1.coord, w) || collideBORL(p1.coord, w) ? -p1.coord.dx : p1.coord.dx;\n      p1.coord.dy = collideBORU(p1.coord, w) || collideBORB(p1.coord, w) ? -p1.coord.dy : p1.coord.dy;\n    });\n  });\n  state.pos.map(p1 => {\n    state.objectC.map(c => {\n      if (collideBOC(p1.coord, c)) {\n        collideboingS(p1.coord, c);\n      }\n    });\n  });\n\n  // Gestion du délai de tir\n  const shootingDelay = 60;\n  if (state.shootCooldownHero <= 0) {\n    state.tirs.push({\n      life: 1,\n      coord: {\n        x: state.hero.coord.x,\n        y: state.hero.coord.y,\n        dx: 0,\n        dy: -2\n      }\n    });\n    state.shootCooldownHero = shootingDelay;\n  } else {\n    state.shootCooldownHero--;\n  }\n\n  //Gestion du délai d'apparition d'ennemis\n  const appearanceDelay = 100;\n  if (state.ennemyDelay <= 0) {\n    //possibilité d'algo de gravité\n    state.debris.push({\n      coord: {\n        x: randomInt(window.innerWidth - (120 + 2 * conf.BOUNDLEFT)) + (60 + conf.BOUNDLEFT),\n        y: 0,\n        dx: 0,\n        dy: 2\n      },\n      radius: 25,\n      life: 2 // faire un truc en fonction du rayon pour la vie\n    });\n    state.ennemyDelay = appearanceDelay;\n  } else {\n    state.ennemyDelay--;\n  }\n\n  //Collision débris - tir\n  state.tirs.map(p1 => {\n    state.debris.map(c => {\n      if (collideBOC(p1.coord, c)) {\n        p1.life--;\n        c.life--;\n      }\n    });\n  });\n  if (state.hero.vie == 0) {\n    state.hero.coord.x = 1;\n    state.endOfGame = true;\n  }\n\n  //Collision debri-héros\n  state.debris.map(d => {\n    if (collideROC(state.hero, d)) {\n      d.life = 0;\n      state.hero.vie--;\n    }\n  });\n  return {\n    ...state,\n    pos: state.pos.map(iterate(state.size)).filter(p => p.life > 0),\n    tirs: state.tirs.map(iterate(state.size)).filter(p => p.coord.y > 0 && p.life > 0),\n    debris: state.debris.map(mouvDebris(state.size)).filter(p => p.coord.y < window.innerHeight && p.life > 0),\n    endOfGame: state.endOfGame\n  };\n};\nexport const handleKeyPress = state => event => {\n  const stepx = state.hero.coord.dx;\n  const stepy = state.hero.coord.dy;\n  const ax = state.hero.coord.x;\n  const ay = state.hero.coord.y;\n  const hx = state.hero.hitBox.hx / 2;\n  const hy = state.hero.hitBox.hy / 2;\n  switch (event.key) {\n    case \"z\":\n      console.log(state.limite);\n      if (ay - stepy - hy > state.limite[0].rightBottom.y) {\n        return {\n          ...state,\n          hero: {\n            ...state.hero,\n            coord: {\n              ...state.hero.coord,\n              y: ay - stepy\n            }\n          }\n        };\n      }\n      return state;\n    case \"s\":\n    case \"S\":\n      console.log(\"s\");\n      if (ay + stepy + hy < state.limite[3].leftTop.y) {\n        return {\n          ...state,\n          hero: {\n            ...state.hero,\n            coord: {\n              ...state.hero.coord,\n              y: ay + stepy\n            }\n          }\n        };\n      }\n      return state;\n    case \"q\":\n    case \"Q\":\n      console.log(\"q\");\n      if (ax - stepx - hx > state.limite[1].rightBottom.x) {\n        return {\n          ...state,\n          hero: {\n            ...state.hero,\n            coord: {\n              ...state.hero.coord,\n              x: ax - stepx\n            }\n          }\n        };\n      }\n      return state;\n    case \"d\":\n    case \"D\":\n      console.log(\"d\");\n      if (ax + stepx + hx < state.limite[2].leftTop.x) {\n        return {\n          ...state,\n          hero: {\n            ...state.hero,\n            coord: {\n              ...state.hero.coord,\n              x: ax + stepx\n            }\n          }\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\nexport const mouseMove = state => event => {\n  return state;\n};\nexport const endOfGame = state => true;","map":{"version":3,"names":["conf","type","randomInt","max","Math","floor","random","dist2","o1","o2","pow","x","y","iterate","bound","ball","coord","dx","dy","mouvDebris","click","state","event","offsetX","offsetY","target","pos","find","p","RADIUS","collideBOC","b","oc","radius","collideROC","h","hx","hy","hw","hitBox","hh","cx","cy","cr","nearestX","min","nearestY","distX","distY","collideBORR","or","rightBottom","leftTop","collideBORL","collideBORU","collideBORB","collide","collideboing","p1","p2","nx","ny","gx","gy","v1g","v2n","v2g","v1n","collideboingS","step","map","i","arr","slice","invincible","life","objectR","w","objectC","c","shootingDelay","shootCooldownHero","tirs","push","hero","appearanceDelay","ennemyDelay","debris","window","innerWidth","BOUNDLEFT","vie","endOfGame","d","size","filter","innerHeight","handleKeyPress","stepx","stepy","ax","ay","key","console","log","limite","mouseMove"],"sources":["/home/ronald/Documents/STL-S2/CPA/ProjetCPAJeu/web/src/components/canvas/state.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport * as conf from './conf'\nexport type Coord = { x: number; y: number; dx: number; dy: number }\nexport type Point = {x:number; y: number}\ntype Ball = { coord: Coord; life: number; invincible?: number }\ntype Size = { height: number; width: number }\ntype Wall = { leftTop:Point, rightBottom:Point}\ntype ObjectCercle = {coord: Coord; radius: number; life: number}\ntype Rectangle = {p1: Coord, width:number, height:number}\ntype Hero = {coord: Coord, hitBox: {hx: number, hy: number}, vie: number, force : number}\ntype \n\n// Mur de droite = 1 et Mur haut = 0 et Mur gauche = 2  \n\nconst randomInt = (max: number) => Math.floor(Math.random() * max)\n\nexport type State = {\n  hero : Hero\n  pos: Array<Ball>\n  limite: Array<Wall>\n  objectC: Array<ObjectCercle>\n  objectR: Array<Wall>\n  size: Size\n  endOfGame: boolean\n  tirs: Array<Ball>\n  debris: Array<ObjectCercle>\n  shootCooldownHero : number\n  ennemyDelay : number\n}\n\nconst dist2 = (o1: Coord, o2: Coord) =>\n  Math.pow(o1.x - o2.x, 2) + Math.pow(o1.y - o2.y, 2)\n\nconst iterate = (bound: Size) => (ball: Ball) => {\n  \n  return {\n    ...ball, \n    coord: {\n      ...ball.coord,\n      x: ball.coord.x + ball.coord.dx,\n      y: ball.coord.y + ball.coord.dy,\n    },\n  }\n}\n\nconst mouvDebris = (bound: Size) => (ball: ObjectCercle) => {\n  \n  return {\n    ...ball, \n    coord: {\n      ...ball.coord,\n      x: ball.coord.x + ball.coord.dx,\n      y: ball.coord.y + ball.coord.dy,\n    },\n  }\n}\n\n\nexport const click =\n  (state: State) =>\n  (event: PointerEvent): State => {\n    const { offsetX, offsetY } = event\n    const target = state.pos.find(\n      (p) =>\n        dist2(p.coord, { x: offsetX, y: offsetY, dx: 0, dy: 0 }) <\n        Math.pow(conf.RADIUS, 2) + 100\n    )\n    if (target) {\n      target.coord.dx += Math.random() * 10\n      target.coord.dy += Math.random() * 10\n    }\n    return state\n  }\n\n\nconst collideBOC = (b:Coord, oc:ObjectCercle) => \n  dist2(b, {x: oc.coord.x, y: oc.coord.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS+oc.radius, 2)\n\nconst collideROC = (h: Hero, oc: ObjectCercle) => {\n  const hx = h.coord.x;\n  const hy = h.coord.y;\n  const hw = h.hitBox.hx;\n  const hh = h.hitBox.hy;\n\n  const cx = oc.coord.x;\n  const cy = oc.coord.y;\n  const cr = oc.radius;\n\n  const nearestX = Math.max(hx - hw / 2, Math.min(cx, hx + hw / 2));\n  const nearestY = Math.max(hy - hh / 2, Math.min(cy, hy + hh / 2));\n  \n  const distX = cx - nearestX;\n  const distY = cy - nearestY;\n\n  return (distX * distX + distY * distY) <= (cr * cr);\n};\n  \n  \nconst collideBORR = (b:Coord, or:Wall) => \n  ((dist2(b, {x: or.rightBottom.x, y: or.leftTop.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \n  (dist2(b, {x: or.rightBottom.x, y: or.rightBottom.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2))) || \n  (dist2(b, {x: or.rightBottom.x, y:b.y, dx:0, dy:0}) < Math.pow(conf.RADIUS,2) && b.y > or.leftTop.y && b.y < or.rightBottom.y)\n\nconst collideBORL = (b:Coord, or: Wall) => \n  (dist2(b, {x: or.leftTop.x, y: or.rightBottom.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \n  (dist2(b, {x: or.leftTop.x, y: or.leftTop.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \n  (dist2(b, {x: or.leftTop.x, y:b.y, dx:0, dy:0}) < Math.pow(conf.RADIUS,2) && b.y > or.leftTop.y && b.y < or.rightBottom.y)\n\nconst collideBORU = (b:Coord, or:Wall) =>\n  (dist2(b, {x: or.rightBottom.x, y: or.leftTop.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \n  (dist2(b, {x: or.leftTop.x, y: or.leftTop.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \n  (dist2(b, {x: b.x, y:or.leftTop.y, dx:0, dy:0}) < Math.pow(conf.RADIUS,2) && b.x > or.leftTop.x && b.x < or.rightBottom.x) \n\n\nconst collideBORB = (b:Coord, or:Wall) =>\n  (dist2(b, {x: or.leftTop.x, y: or.rightBottom.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \n  (dist2(b, {x: or.rightBottom.x, y: or.rightBottom.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \n  (dist2(b, {x: b.x, y:or.rightBottom.y, dx:0, dy:0}) < Math.pow(conf.RADIUS,2) && b.x > or.leftTop.x && b.x < or.rightBottom.x) \n\n\nconst collide = (o1: Coord, o2: Coord) =>\n  dist2(o1, o2) < Math.pow(2 * conf.RADIUS, 2)\n\nconst collideboing = (p1: Coord, p2: Coord) => {\n  const nx = (p2.x - p1.x) / (2 * conf.RADIUS)\n  const ny = (p2.y - p1.y) / (2 * conf.RADIUS)\n  const gx = -ny\n  const gy = nx\n\n  const v1g = gx * p1.dx + gy * p1.dy\n  const v2n = nx * p2.dx + ny * p2.dy\n  const v2g = gx * p2.dx + gy * p2.dy\n  const v1n = nx * p1.dx + ny * p1.dy\n  p1.dx = nx * v2n + gx * v1g\n  p1.dy = ny * v2n + gy * v1g\n  p2.dx = nx * v1n + gx * v2g\n  p2.dy = ny * v1n + gy * v2g\n  p1.x += p1.dx\n  p1.y += p1.dy\n  p2.x += p2.dx\n  p2.y += p2.dy\n}\n\nconst collideboingS = (p1: Coord, p2:ObjectCercle) => {\n  const nx = (p2.coord.x-p1.x) / (2 * conf.RADIUS)\n  const ny = (p2.coord.y-p1.y) / (2 * conf.RADIUS)\n  const gx = -ny\n  const gy = nx\n\n  const v1g = gx * p1.dx + gy * p1.dy\n  const v1n = nx * p1.dx + ny * p1.dy\n  p1.dx -= 2 * nx  + gx * v1g\n  p1.dy -= 2 * ny  + gy * v1g\n  p1.x += p1.dx\n  p1.y += p1.dy\n  \n}\n\nexport const step = (state: State) => {\n    \n  state.pos.map((p1, i, arr) => {\n    arr.slice(i + 1).map((p2) => {\n      if (collide(p1.coord, p2.coord)) {\n        if (!p1.invincible) {\n          p1.life--\n          p1.invincible = 20\n        }\n        if (!p2.invincible) {\n          p2.life--\n          p2.invincible = 20\n        }\n        collideboing(p1.coord, p2.coord)\n      }\n    })\n  })\n\n  state.pos.map((p1) => {\n    state.objectR.map((w) => {\n      p1.coord.dx = \n      (collideBORR(p1.coord, w) || collideBORL(p1.coord, w)\n      ? -p1.coord.dx\n      : p1.coord.dx)\n      p1.coord.dy = \n      (collideBORU(p1.coord, w) || collideBORB(p1.coord, w)\n      ? -p1.coord.dy\n      : p1.coord.dy)\n    })\n  })\n  \n  state.pos.map((p1) => {\n    state.objectC.map((c) => {\n      if (collideBOC(p1.coord, c)){\n        collideboingS(p1.coord, c)\n      }\n    })\n  })\n\n  // Gestion du délai de tir\n  const shootingDelay = 60; \n\n  if (state.shootCooldownHero <= 0) {\n    state.tirs.push({\n      life: 1,\n      coord: {\n        x: state.hero.coord.x,\n        y: state.hero.coord.y,\n        dx: 0,\n        dy: -2,\n      },\n    });\n    state.shootCooldownHero = shootingDelay;\n  } else {\n    state.shootCooldownHero--;\n  }\n\n  //Gestion du délai d'apparition d'ennemis\n  const appearanceDelay = 100;\n  if (state.ennemyDelay <= 0) {\n    //possibilité d'algo de gravité\n    state.debris.push(\n      {coord:{\n        x: randomInt(window.innerWidth - (120+(2*conf.BOUNDLEFT))) + (60+conf.BOUNDLEFT),\n        y: 0,\n        dx:0, \n        dy:2},\n      radius : 25,\n      life : 2 // faire un truc en fonction du rayon pour la vie\n    });\n    state.ennemyDelay = appearanceDelay;\n  } else {\n    state.ennemyDelay--;\n  }\n\n  //Collision débris - tir\n  state.tirs.map((p1) => {\n    state.debris.map((c) => {\n      if (collideBOC(p1.coord, c)){\n        p1.life--\n        c.life--\n      }\n    })\n  })\n\n  if(state.hero.vie == 0) {\n    state.hero.coord.x =1\n    state.endOfGame = true\n  }\n\n  //Collision debri-héros\n  state.debris.map((d) => {\n    if (collideROC(state.hero,d)) {\n      d.life = 0\n      state.hero.vie --;\n    }\n\n  })\n\n\n  return {\n    ...state,\n    pos: state.pos.map(iterate(state.size)).filter((p) => p.life > 0),\n    tirs: state.tirs.map(iterate(state.size)).filter((p) => p.coord.y > 0 && p.life > 0),\n    debris: state.debris.map(mouvDebris(state.size)).filter((p) => p.coord.y < window.innerHeight && p.life > 0),\n    endOfGame: state.endOfGame,\n  }\n}\n\nexport const handleKeyPress = \n  (state: State) =>\n    (event: KeyboardEvent):State => { \n        const stepx = state.hero.coord.dx;\n        const stepy = state.hero.coord.dy;\n        const ax = state.hero.coord.x;\n        const ay = state.hero.coord.y;\n        const hx = state.hero.hitBox.hx/2;\n        const hy = state.hero.hitBox.hy/2;\n        switch (event.key) {\n          case \"z\":\n            console.log(state.limite)\n            \n            if (ay - stepy - hy > state.limite[0].rightBottom.y){\n              return {...state, hero:{...state.hero, coord: {...state.hero.coord, y: ay - stepy}}}\n            }\n            return state;\n          case \"s\":\n          case \"S\":\n            console.log(\"s\")\n            if (ay + stepy+ hy< state.limite[3].leftTop.y){\n              return {...state, hero:{...state.hero, coord: {...state.hero.coord, y: ay + stepy}}}\n            }\n            return state;\n          case \"q\":\n          case \"Q\":\n            console.log(\"q\")\n            if (ax - stepx - hx> state.limite[1].rightBottom.x){\n              return {...state, hero:{...state.hero, coord: {...state.hero.coord, x: ax - stepx}}}\n            }\n            return state;\n          case \"d\":\n          case \"D\":\n            console.log(\"d\")\n            if (ax + stepx + hx < state.limite[2].leftTop.x){\n              return {...state, hero:{...state.hero, coord: {...state.hero.coord, x: ax + stepx}}}\n            }\n            return state;\n          default : \n            return state\n        }\n      }\n\nexport const mouseMove =\n  (state: State) =>\n  (event: PointerEvent): State => {\n    return state\n  }\n\nexport const endOfGame = (state: State): boolean => true\n"],"mappings":"AACA,OAAO,KAAKA,IAAI,MAAM,QAAQ;AAS9BC,IAAI;;AAEJ;;AAEA,MAAMC,SAAS,GAAIC,GAAW,IAAKC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,GAAG,CAAC;AAgBlE,MAAMI,KAAK,GAAGA,CAACC,EAAS,EAAEC,EAAS,KACjCL,IAAI,CAACM,GAAG,CAACF,EAAE,CAACG,CAAC,GAAGF,EAAE,CAACE,CAAC,EAAE,CAAC,CAAC,GAAGP,IAAI,CAACM,GAAG,CAACF,EAAE,CAACI,CAAC,GAAGH,EAAE,CAACG,CAAC,EAAE,CAAC,CAAC;AAErD,MAAMC,OAAO,GAAIC,KAAW,IAAMC,IAAU,IAAK;EAE/C,OAAO;IACL,GAAGA,IAAI;IACPC,KAAK,EAAE;MACL,GAAGD,IAAI,CAACC,KAAK;MACbL,CAAC,EAAEI,IAAI,CAACC,KAAK,CAACL,CAAC,GAAGI,IAAI,CAACC,KAAK,CAACC,EAAE;MAC/BL,CAAC,EAAEG,IAAI,CAACC,KAAK,CAACJ,CAAC,GAAGG,IAAI,CAACC,KAAK,CAACE;IAC/B;EACF,CAAC;AACH,CAAC;AAED,MAAMC,UAAU,GAAIL,KAAW,IAAMC,IAAkB,IAAK;EAE1D,OAAO;IACL,GAAGA,IAAI;IACPC,KAAK,EAAE;MACL,GAAGD,IAAI,CAACC,KAAK;MACbL,CAAC,EAAEI,IAAI,CAACC,KAAK,CAACL,CAAC,GAAGI,IAAI,CAACC,KAAK,CAACC,EAAE;MAC/BL,CAAC,EAAEG,IAAI,CAACC,KAAK,CAACJ,CAAC,GAAGG,IAAI,CAACC,KAAK,CAACE;IAC/B;EACF,CAAC;AACH,CAAC;AAGD,OAAO,MAAME,KAAK,GACfC,KAAY,IACZC,KAAmB,IAAY;EAC9B,MAAM;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EAClC,MAAMG,MAAM,GAAGJ,KAAK,CAACK,GAAG,CAACC,IAAI,CAC1BC,CAAC,IACArB,KAAK,CAACqB,CAAC,CAACZ,KAAK,EAAE;IAAEL,CAAC,EAAEY,OAAO;IAAEX,CAAC,EAAEY,OAAO;IAAEP,EAAE,EAAE,CAAC;IAAEC,EAAE,EAAE;EAAE,CAAC,CAAC,GACxDd,IAAI,CAACM,GAAG,CAACV,IAAI,CAAC6B,MAAM,EAAE,CAAC,CAAC,GAAG,GAC/B,CAAC;EACD,IAAIJ,MAAM,EAAE;IACVA,MAAM,CAACT,KAAK,CAACC,EAAE,IAAIb,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE;IACrCmB,MAAM,CAACT,KAAK,CAACE,EAAE,IAAId,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE;EACvC;EACA,OAAOe,KAAK;AACd,CAAC;AAGH,MAAMS,UAAU,GAAGA,CAACC,CAAO,EAAEC,EAAe,KAC1CzB,KAAK,CAACwB,CAAC,EAAE;EAACpB,CAAC,EAAEqB,EAAE,CAAChB,KAAK,CAACL,CAAC;EAAEC,CAAC,EAAEoB,EAAE,CAAChB,KAAK,CAACJ,CAAC;EAAEK,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE;AAAC,CAAC,CAAC,GAAGd,IAAI,CAACM,GAAG,CAACV,IAAI,CAAC6B,MAAM,GAACG,EAAE,CAACC,MAAM,EAAE,CAAC,CAAC;AAE7F,MAAMC,UAAU,GAAGA,CAACC,CAAO,EAAEH,EAAgB,KAAK;EAChD,MAAMI,EAAE,GAAGD,CAAC,CAACnB,KAAK,CAACL,CAAC;EACpB,MAAM0B,EAAE,GAAGF,CAAC,CAACnB,KAAK,CAACJ,CAAC;EACpB,MAAM0B,EAAE,GAAGH,CAAC,CAACI,MAAM,CAACH,EAAE;EACtB,MAAMI,EAAE,GAAGL,CAAC,CAACI,MAAM,CAACF,EAAE;EAEtB,MAAMI,EAAE,GAAGT,EAAE,CAAChB,KAAK,CAACL,CAAC;EACrB,MAAM+B,EAAE,GAAGV,EAAE,CAAChB,KAAK,CAACJ,CAAC;EACrB,MAAM+B,EAAE,GAAGX,EAAE,CAACC,MAAM;EAEpB,MAAMW,QAAQ,GAAGxC,IAAI,CAACD,GAAG,CAACiC,EAAE,GAAGE,EAAE,GAAG,CAAC,EAAElC,IAAI,CAACyC,GAAG,CAACJ,EAAE,EAAEL,EAAE,GAAGE,EAAE,GAAG,CAAC,CAAC,CAAC;EACjE,MAAMQ,QAAQ,GAAG1C,IAAI,CAACD,GAAG,CAACkC,EAAE,GAAGG,EAAE,GAAG,CAAC,EAAEpC,IAAI,CAACyC,GAAG,CAACH,EAAE,EAAEL,EAAE,GAAGG,EAAE,GAAG,CAAC,CAAC,CAAC;EAEjE,MAAMO,KAAK,GAAGN,EAAE,GAAGG,QAAQ;EAC3B,MAAMI,KAAK,GAAGN,EAAE,GAAGI,QAAQ;EAE3B,OAAQC,KAAK,GAAGA,KAAK,GAAGC,KAAK,GAAGA,KAAK,IAAML,EAAE,GAAGA,EAAG;AACrD,CAAC;AAGD,MAAMM,WAAW,GAAGA,CAAClB,CAAO,EAAEmB,EAAO,KACjC3C,KAAK,CAACwB,CAAC,EAAE;EAACpB,CAAC,EAAEuC,EAAE,CAACC,WAAW,CAACxC,CAAC;EAAEC,CAAC,EAAEsC,EAAE,CAACE,OAAO,CAACxC,CAAC;EAAEK,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE;AAAC,CAAC,CAAC,GAAGd,IAAI,CAACM,GAAG,CAACV,IAAI,CAAC6B,MAAM,EAAE,CAAC,CAAC,IAC1FtB,KAAK,CAACwB,CAAC,EAAE;EAACpB,CAAC,EAAEuC,EAAE,CAACC,WAAW,CAACxC,CAAC;EAAEC,CAAC,EAAEsC,EAAE,CAACC,WAAW,CAACvC,CAAC;EAAEK,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE;AAAC,CAAC,CAAC,GAAGd,IAAI,CAACM,GAAG,CAACV,IAAI,CAAC6B,MAAM,EAAE,CAAC,CAAE,IAC9FtB,KAAK,CAACwB,CAAC,EAAE;EAACpB,CAAC,EAAEuC,EAAE,CAACC,WAAW,CAACxC,CAAC;EAAEC,CAAC,EAACmB,CAAC,CAACnB,CAAC;EAAEK,EAAE,EAAC,CAAC;EAAEC,EAAE,EAAC;AAAC,CAAC,CAAC,GAAGd,IAAI,CAACM,GAAG,CAACV,IAAI,CAAC6B,MAAM,EAAC,CAAC,CAAC,IAAIE,CAAC,CAACnB,CAAC,GAAGsC,EAAE,CAACE,OAAO,CAACxC,CAAC,IAAImB,CAAC,CAACnB,CAAC,GAAGsC,EAAE,CAACC,WAAW,CAACvC,CAAE;AAEhI,MAAMyC,WAAW,GAAGA,CAACtB,CAAO,EAAEmB,EAAQ,KACnC3C,KAAK,CAACwB,CAAC,EAAE;EAACpB,CAAC,EAAEuC,EAAE,CAACE,OAAO,CAACzC,CAAC;EAAEC,CAAC,EAAEsC,EAAE,CAACC,WAAW,CAACvC,CAAC;EAAEK,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE;AAAC,CAAC,CAAC,GAAGd,IAAI,CAACM,GAAG,CAACV,IAAI,CAAC6B,MAAM,EAAE,CAAC,CAAC,IACzFtB,KAAK,CAACwB,CAAC,EAAE;EAACpB,CAAC,EAAEuC,EAAE,CAACE,OAAO,CAACzC,CAAC;EAAEC,CAAC,EAAEsC,EAAE,CAACE,OAAO,CAACxC,CAAC;EAAEK,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE;AAAC,CAAC,CAAC,GAAGd,IAAI,CAACM,GAAG,CAACV,IAAI,CAAC6B,MAAM,EAAE,CAAC,CAAE,IACtFtB,KAAK,CAACwB,CAAC,EAAE;EAACpB,CAAC,EAAEuC,EAAE,CAACE,OAAO,CAACzC,CAAC;EAAEC,CAAC,EAACmB,CAAC,CAACnB,CAAC;EAAEK,EAAE,EAAC,CAAC;EAAEC,EAAE,EAAC;AAAC,CAAC,CAAC,GAAGd,IAAI,CAACM,GAAG,CAACV,IAAI,CAAC6B,MAAM,EAAC,CAAC,CAAC,IAAIE,CAAC,CAACnB,CAAC,GAAGsC,EAAE,CAACE,OAAO,CAACxC,CAAC,IAAImB,CAAC,CAACnB,CAAC,GAAGsC,EAAE,CAACC,WAAW,CAACvC,CAAE;AAE5H,MAAM0C,WAAW,GAAGA,CAACvB,CAAO,EAAEmB,EAAO,KAClC3C,KAAK,CAACwB,CAAC,EAAE;EAACpB,CAAC,EAAEuC,EAAE,CAACC,WAAW,CAACxC,CAAC;EAAEC,CAAC,EAAEsC,EAAE,CAACE,OAAO,CAACxC,CAAC;EAAEK,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE;AAAC,CAAC,CAAC,GAAGd,IAAI,CAACM,GAAG,CAACV,IAAI,CAAC6B,MAAM,EAAE,CAAC,CAAC,IACzFtB,KAAK,CAACwB,CAAC,EAAE;EAACpB,CAAC,EAAEuC,EAAE,CAACE,OAAO,CAACzC,CAAC;EAAEC,CAAC,EAAEsC,EAAE,CAACE,OAAO,CAACxC,CAAC;EAAEK,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE;AAAC,CAAC,CAAC,GAAGd,IAAI,CAACM,GAAG,CAACV,IAAI,CAAC6B,MAAM,EAAE,CAAC,CAAE,IACtFtB,KAAK,CAACwB,CAAC,EAAE;EAACpB,CAAC,EAAEoB,CAAC,CAACpB,CAAC;EAAEC,CAAC,EAACsC,EAAE,CAACE,OAAO,CAACxC,CAAC;EAAEK,EAAE,EAAC,CAAC;EAAEC,EAAE,EAAC;AAAC,CAAC,CAAC,GAAGd,IAAI,CAACM,GAAG,CAACV,IAAI,CAAC6B,MAAM,EAAC,CAAC,CAAC,IAAIE,CAAC,CAACpB,CAAC,GAAGuC,EAAE,CAACE,OAAO,CAACzC,CAAC,IAAIoB,CAAC,CAACpB,CAAC,GAAGuC,EAAE,CAACC,WAAW,CAACxC,CAAE;AAG5H,MAAM4C,WAAW,GAAGA,CAACxB,CAAO,EAAEmB,EAAO,KAClC3C,KAAK,CAACwB,CAAC,EAAE;EAACpB,CAAC,EAAEuC,EAAE,CAACE,OAAO,CAACzC,CAAC;EAAEC,CAAC,EAAEsC,EAAE,CAACC,WAAW,CAACvC,CAAC;EAAEK,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE;AAAC,CAAC,CAAC,GAAGd,IAAI,CAACM,GAAG,CAACV,IAAI,CAAC6B,MAAM,EAAE,CAAC,CAAC,IACzFtB,KAAK,CAACwB,CAAC,EAAE;EAACpB,CAAC,EAAEuC,EAAE,CAACC,WAAW,CAACxC,CAAC;EAAEC,CAAC,EAAEsC,EAAE,CAACC,WAAW,CAACvC,CAAC;EAAEK,EAAE,EAAE,CAAC;EAAEC,EAAE,EAAE;AAAC,CAAC,CAAC,GAAGd,IAAI,CAACM,GAAG,CAACV,IAAI,CAAC6B,MAAM,EAAE,CAAC,CAAE,IAC9FtB,KAAK,CAACwB,CAAC,EAAE;EAACpB,CAAC,EAAEoB,CAAC,CAACpB,CAAC;EAAEC,CAAC,EAACsC,EAAE,CAACC,WAAW,CAACvC,CAAC;EAAEK,EAAE,EAAC,CAAC;EAAEC,EAAE,EAAC;AAAC,CAAC,CAAC,GAAGd,IAAI,CAACM,GAAG,CAACV,IAAI,CAAC6B,MAAM,EAAC,CAAC,CAAC,IAAIE,CAAC,CAACpB,CAAC,GAAGuC,EAAE,CAACE,OAAO,CAACzC,CAAC,IAAIoB,CAAC,CAACpB,CAAC,GAAGuC,EAAE,CAACC,WAAW,CAACxC,CAAE;AAGhI,MAAM6C,OAAO,GAAGA,CAAChD,EAAS,EAAEC,EAAS,KACnCF,KAAK,CAACC,EAAE,EAAEC,EAAE,CAAC,GAAGL,IAAI,CAACM,GAAG,CAAC,CAAC,GAAGV,IAAI,CAAC6B,MAAM,EAAE,CAAC,CAAC;AAE9C,MAAM4B,YAAY,GAAGA,CAACC,EAAS,EAAEC,EAAS,KAAK;EAC7C,MAAMC,EAAE,GAAG,CAACD,EAAE,CAAChD,CAAC,GAAG+C,EAAE,CAAC/C,CAAC,KAAK,CAAC,GAAGX,IAAI,CAAC6B,MAAM,CAAC;EAC5C,MAAMgC,EAAE,GAAG,CAACF,EAAE,CAAC/C,CAAC,GAAG8C,EAAE,CAAC9C,CAAC,KAAK,CAAC,GAAGZ,IAAI,CAAC6B,MAAM,CAAC;EAC5C,MAAMiC,EAAE,GAAG,CAACD,EAAE;EACd,MAAME,EAAE,GAAGH,EAAE;EAEb,MAAMI,GAAG,GAAGF,EAAE,GAAGJ,EAAE,CAACzC,EAAE,GAAG8C,EAAE,GAAGL,EAAE,CAACxC,EAAE;EACnC,MAAM+C,GAAG,GAAGL,EAAE,GAAGD,EAAE,CAAC1C,EAAE,GAAG4C,EAAE,GAAGF,EAAE,CAACzC,EAAE;EACnC,MAAMgD,GAAG,GAAGJ,EAAE,GAAGH,EAAE,CAAC1C,EAAE,GAAG8C,EAAE,GAAGJ,EAAE,CAACzC,EAAE;EACnC,MAAMiD,GAAG,GAAGP,EAAE,GAAGF,EAAE,CAACzC,EAAE,GAAG4C,EAAE,GAAGH,EAAE,CAACxC,EAAE;EACnCwC,EAAE,CAACzC,EAAE,GAAG2C,EAAE,GAAGK,GAAG,GAAGH,EAAE,GAAGE,GAAG;EAC3BN,EAAE,CAACxC,EAAE,GAAG2C,EAAE,GAAGI,GAAG,GAAGF,EAAE,GAAGC,GAAG;EAC3BL,EAAE,CAAC1C,EAAE,GAAG2C,EAAE,GAAGO,GAAG,GAAGL,EAAE,GAAGI,GAAG;EAC3BP,EAAE,CAACzC,EAAE,GAAG2C,EAAE,GAAGM,GAAG,GAAGJ,EAAE,GAAGG,GAAG;EAC3BR,EAAE,CAAC/C,CAAC,IAAI+C,EAAE,CAACzC,EAAE;EACbyC,EAAE,CAAC9C,CAAC,IAAI8C,EAAE,CAACxC,EAAE;EACbyC,EAAE,CAAChD,CAAC,IAAIgD,EAAE,CAAC1C,EAAE;EACb0C,EAAE,CAAC/C,CAAC,IAAI+C,EAAE,CAACzC,EAAE;AACf,CAAC;AAED,MAAMkD,aAAa,GAAGA,CAACV,EAAS,EAAEC,EAAe,KAAK;EACpD,MAAMC,EAAE,GAAG,CAACD,EAAE,CAAC3C,KAAK,CAACL,CAAC,GAAC+C,EAAE,CAAC/C,CAAC,KAAK,CAAC,GAAGX,IAAI,CAAC6B,MAAM,CAAC;EAChD,MAAMgC,EAAE,GAAG,CAACF,EAAE,CAAC3C,KAAK,CAACJ,CAAC,GAAC8C,EAAE,CAAC9C,CAAC,KAAK,CAAC,GAAGZ,IAAI,CAAC6B,MAAM,CAAC;EAChD,MAAMiC,EAAE,GAAG,CAACD,EAAE;EACd,MAAME,EAAE,GAAGH,EAAE;EAEb,MAAMI,GAAG,GAAGF,EAAE,GAAGJ,EAAE,CAACzC,EAAE,GAAG8C,EAAE,GAAGL,EAAE,CAACxC,EAAE;EACnC,MAAMiD,GAAG,GAAGP,EAAE,GAAGF,EAAE,CAACzC,EAAE,GAAG4C,EAAE,GAAGH,EAAE,CAACxC,EAAE;EACnCwC,EAAE,CAACzC,EAAE,IAAI,CAAC,GAAG2C,EAAE,GAAIE,EAAE,GAAGE,GAAG;EAC3BN,EAAE,CAACxC,EAAE,IAAI,CAAC,GAAG2C,EAAE,GAAIE,EAAE,GAAGC,GAAG;EAC3BN,EAAE,CAAC/C,CAAC,IAAI+C,EAAE,CAACzC,EAAE;EACbyC,EAAE,CAAC9C,CAAC,IAAI8C,EAAE,CAACxC,EAAE;AAEf,CAAC;AAED,OAAO,MAAMmD,IAAI,GAAIhD,KAAY,IAAK;EAEpCA,KAAK,CAACK,GAAG,CAAC4C,GAAG,CAAC,CAACZ,EAAE,EAAEa,CAAC,EAAEC,GAAG,KAAK;IAC5BA,GAAG,CAACC,KAAK,CAACF,CAAC,GAAG,CAAC,CAAC,CAACD,GAAG,CAAEX,EAAE,IAAK;MAC3B,IAAIH,OAAO,CAACE,EAAE,CAAC1C,KAAK,EAAE2C,EAAE,CAAC3C,KAAK,CAAC,EAAE;QAC/B,IAAI,CAAC0C,EAAE,CAACgB,UAAU,EAAE;UAClBhB,EAAE,CAACiB,IAAI,EAAE;UACTjB,EAAE,CAACgB,UAAU,GAAG,EAAE;QACpB;QACA,IAAI,CAACf,EAAE,CAACe,UAAU,EAAE;UAClBf,EAAE,CAACgB,IAAI,EAAE;UACThB,EAAE,CAACe,UAAU,GAAG,EAAE;QACpB;QACAjB,YAAY,CAACC,EAAE,CAAC1C,KAAK,EAAE2C,EAAE,CAAC3C,KAAK,CAAC;MAClC;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFK,KAAK,CAACK,GAAG,CAAC4C,GAAG,CAAEZ,EAAE,IAAK;IACpBrC,KAAK,CAACuD,OAAO,CAACN,GAAG,CAAEO,CAAC,IAAK;MACvBnB,EAAE,CAAC1C,KAAK,CAACC,EAAE,GACVgC,WAAW,CAACS,EAAE,CAAC1C,KAAK,EAAE6D,CAAC,CAAC,IAAIxB,WAAW,CAACK,EAAE,CAAC1C,KAAK,EAAE6D,CAAC,CAAC,GACnD,CAACnB,EAAE,CAAC1C,KAAK,CAACC,EAAE,GACZyC,EAAE,CAAC1C,KAAK,CAACC,EAAG;MACdyC,EAAE,CAAC1C,KAAK,CAACE,EAAE,GACVoC,WAAW,CAACI,EAAE,CAAC1C,KAAK,EAAE6D,CAAC,CAAC,IAAItB,WAAW,CAACG,EAAE,CAAC1C,KAAK,EAAE6D,CAAC,CAAC,GACnD,CAACnB,EAAE,CAAC1C,KAAK,CAACE,EAAE,GACZwC,EAAE,CAAC1C,KAAK,CAACE,EAAG;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFG,KAAK,CAACK,GAAG,CAAC4C,GAAG,CAAEZ,EAAE,IAAK;IACpBrC,KAAK,CAACyD,OAAO,CAACR,GAAG,CAAES,CAAC,IAAK;MACvB,IAAIjD,UAAU,CAAC4B,EAAE,CAAC1C,KAAK,EAAE+D,CAAC,CAAC,EAAC;QAC1BX,aAAa,CAACV,EAAE,CAAC1C,KAAK,EAAE+D,CAAC,CAAC;MAC5B;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA,MAAMC,aAAa,GAAG,EAAE;EAExB,IAAI3D,KAAK,CAAC4D,iBAAiB,IAAI,CAAC,EAAE;IAChC5D,KAAK,CAAC6D,IAAI,CAACC,IAAI,CAAC;MACdR,IAAI,EAAE,CAAC;MACP3D,KAAK,EAAE;QACLL,CAAC,EAAEU,KAAK,CAAC+D,IAAI,CAACpE,KAAK,CAACL,CAAC;QACrBC,CAAC,EAAES,KAAK,CAAC+D,IAAI,CAACpE,KAAK,CAACJ,CAAC;QACrBK,EAAE,EAAE,CAAC;QACLC,EAAE,EAAE,CAAC;MACP;IACF,CAAC,CAAC;IACFG,KAAK,CAAC4D,iBAAiB,GAAGD,aAAa;EACzC,CAAC,MAAM;IACL3D,KAAK,CAAC4D,iBAAiB,EAAE;EAC3B;;EAEA;EACA,MAAMI,eAAe,GAAG,GAAG;EAC3B,IAAIhE,KAAK,CAACiE,WAAW,IAAI,CAAC,EAAE;IAC1B;IACAjE,KAAK,CAACkE,MAAM,CAACJ,IAAI,CACf;MAACnE,KAAK,EAAC;QACLL,CAAC,EAAET,SAAS,CAACsF,MAAM,CAACC,UAAU,IAAI,GAAG,GAAE,CAAC,GAACzF,IAAI,CAAC0F,SAAU,CAAC,CAAC,IAAI,EAAE,GAAC1F,IAAI,CAAC0F,SAAS,CAAC;QAChF9E,CAAC,EAAE,CAAC;QACJK,EAAE,EAAC,CAAC;QACJC,EAAE,EAAC;MAAC,CAAC;MACPe,MAAM,EAAG,EAAE;MACX0C,IAAI,EAAG,CAAC,CAAC;IACX,CAAC,CAAC;IACFtD,KAAK,CAACiE,WAAW,GAAGD,eAAe;EACrC,CAAC,MAAM;IACLhE,KAAK,CAACiE,WAAW,EAAE;EACrB;;EAEA;EACAjE,KAAK,CAAC6D,IAAI,CAACZ,GAAG,CAAEZ,EAAE,IAAK;IACrBrC,KAAK,CAACkE,MAAM,CAACjB,GAAG,CAAES,CAAC,IAAK;MACtB,IAAIjD,UAAU,CAAC4B,EAAE,CAAC1C,KAAK,EAAE+D,CAAC,CAAC,EAAC;QAC1BrB,EAAE,CAACiB,IAAI,EAAE;QACTI,CAAC,CAACJ,IAAI,EAAE;MACV;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,IAAGtD,KAAK,CAAC+D,IAAI,CAACO,GAAG,IAAI,CAAC,EAAE;IACtBtE,KAAK,CAAC+D,IAAI,CAACpE,KAAK,CAACL,CAAC,GAAE,CAAC;IACrBU,KAAK,CAACuE,SAAS,GAAG,IAAI;EACxB;;EAEA;EACAvE,KAAK,CAACkE,MAAM,CAACjB,GAAG,CAAEuB,CAAC,IAAK;IACtB,IAAI3D,UAAU,CAACb,KAAK,CAAC+D,IAAI,EAACS,CAAC,CAAC,EAAE;MAC5BA,CAAC,CAAClB,IAAI,GAAG,CAAC;MACVtD,KAAK,CAAC+D,IAAI,CAACO,GAAG,EAAG;IACnB;EAEF,CAAC,CAAC;EAGF,OAAO;IACL,GAAGtE,KAAK;IACRK,GAAG,EAAEL,KAAK,CAACK,GAAG,CAAC4C,GAAG,CAACzD,OAAO,CAACQ,KAAK,CAACyE,IAAI,CAAC,CAAC,CAACC,MAAM,CAAEnE,CAAC,IAAKA,CAAC,CAAC+C,IAAI,GAAG,CAAC,CAAC;IACjEO,IAAI,EAAE7D,KAAK,CAAC6D,IAAI,CAACZ,GAAG,CAACzD,OAAO,CAACQ,KAAK,CAACyE,IAAI,CAAC,CAAC,CAACC,MAAM,CAAEnE,CAAC,IAAKA,CAAC,CAACZ,KAAK,CAACJ,CAAC,GAAG,CAAC,IAAIgB,CAAC,CAAC+C,IAAI,GAAG,CAAC,CAAC;IACpFY,MAAM,EAAElE,KAAK,CAACkE,MAAM,CAACjB,GAAG,CAACnD,UAAU,CAACE,KAAK,CAACyE,IAAI,CAAC,CAAC,CAACC,MAAM,CAAEnE,CAAC,IAAKA,CAAC,CAACZ,KAAK,CAACJ,CAAC,GAAG4E,MAAM,CAACQ,WAAW,IAAIpE,CAAC,CAAC+C,IAAI,GAAG,CAAC,CAAC;IAC5GiB,SAAS,EAAEvE,KAAK,CAACuE;EACnB,CAAC;AACH,CAAC;AAED,OAAO,MAAMK,cAAc,GACxB5E,KAAY,IACVC,KAAoB,IAAW;EAC5B,MAAM4E,KAAK,GAAG7E,KAAK,CAAC+D,IAAI,CAACpE,KAAK,CAACC,EAAE;EACjC,MAAMkF,KAAK,GAAG9E,KAAK,CAAC+D,IAAI,CAACpE,KAAK,CAACE,EAAE;EACjC,MAAMkF,EAAE,GAAG/E,KAAK,CAAC+D,IAAI,CAACpE,KAAK,CAACL,CAAC;EAC7B,MAAM0F,EAAE,GAAGhF,KAAK,CAAC+D,IAAI,CAACpE,KAAK,CAACJ,CAAC;EAC7B,MAAMwB,EAAE,GAAGf,KAAK,CAAC+D,IAAI,CAAC7C,MAAM,CAACH,EAAE,GAAC,CAAC;EACjC,MAAMC,EAAE,GAAGhB,KAAK,CAAC+D,IAAI,CAAC7C,MAAM,CAACF,EAAE,GAAC,CAAC;EACjC,QAAQf,KAAK,CAACgF,GAAG;IACf,KAAK,GAAG;MACNC,OAAO,CAACC,GAAG,CAACnF,KAAK,CAACoF,MAAM,CAAC;MAEzB,IAAIJ,EAAE,GAAGF,KAAK,GAAG9D,EAAE,GAAGhB,KAAK,CAACoF,MAAM,CAAC,CAAC,CAAC,CAACtD,WAAW,CAACvC,CAAC,EAAC;QAClD,OAAO;UAAC,GAAGS,KAAK;UAAE+D,IAAI,EAAC;YAAC,GAAG/D,KAAK,CAAC+D,IAAI;YAAEpE,KAAK,EAAE;cAAC,GAAGK,KAAK,CAAC+D,IAAI,CAACpE,KAAK;cAAEJ,CAAC,EAAEyF,EAAE,GAAGF;YAAK;UAAC;QAAC,CAAC;MACtF;MACA,OAAO9E,KAAK;IACd,KAAK,GAAG;IACR,KAAK,GAAG;MACNkF,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;MAChB,IAAIH,EAAE,GAAGF,KAAK,GAAE9D,EAAE,GAAEhB,KAAK,CAACoF,MAAM,CAAC,CAAC,CAAC,CAACrD,OAAO,CAACxC,CAAC,EAAC;QAC5C,OAAO;UAAC,GAAGS,KAAK;UAAE+D,IAAI,EAAC;YAAC,GAAG/D,KAAK,CAAC+D,IAAI;YAAEpE,KAAK,EAAE;cAAC,GAAGK,KAAK,CAAC+D,IAAI,CAACpE,KAAK;cAAEJ,CAAC,EAAEyF,EAAE,GAAGF;YAAK;UAAC;QAAC,CAAC;MACtF;MACA,OAAO9E,KAAK;IACd,KAAK,GAAG;IACR,KAAK,GAAG;MACNkF,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;MAChB,IAAIJ,EAAE,GAAGF,KAAK,GAAG9D,EAAE,GAAEf,KAAK,CAACoF,MAAM,CAAC,CAAC,CAAC,CAACtD,WAAW,CAACxC,CAAC,EAAC;QACjD,OAAO;UAAC,GAAGU,KAAK;UAAE+D,IAAI,EAAC;YAAC,GAAG/D,KAAK,CAAC+D,IAAI;YAAEpE,KAAK,EAAE;cAAC,GAAGK,KAAK,CAAC+D,IAAI,CAACpE,KAAK;cAAEL,CAAC,EAAEyF,EAAE,GAAGF;YAAK;UAAC;QAAC,CAAC;MACtF;MACA,OAAO7E,KAAK;IACd,KAAK,GAAG;IACR,KAAK,GAAG;MACNkF,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;MAChB,IAAIJ,EAAE,GAAGF,KAAK,GAAG9D,EAAE,GAAGf,KAAK,CAACoF,MAAM,CAAC,CAAC,CAAC,CAACrD,OAAO,CAACzC,CAAC,EAAC;QAC9C,OAAO;UAAC,GAAGU,KAAK;UAAE+D,IAAI,EAAC;YAAC,GAAG/D,KAAK,CAAC+D,IAAI;YAAEpE,KAAK,EAAE;cAAC,GAAGK,KAAK,CAAC+D,IAAI,CAACpE,KAAK;cAAEL,CAAC,EAAEyF,EAAE,GAAGF;YAAK;UAAC;QAAC,CAAC;MACtF;MACA,OAAO7E,KAAK;IACd;MACE,OAAOA,KAAK;EAChB;AACF,CAAC;AAEP,OAAO,MAAMqF,SAAS,GACnBrF,KAAY,IACZC,KAAmB,IAAY;EAC9B,OAAOD,KAAK;AACd,CAAC;AAEH,OAAO,MAAMuE,SAAS,GAAIvE,KAAY,IAAc,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}