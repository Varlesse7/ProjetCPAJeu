{"ast":null,"code":"import * as conf from './conf';\n\n// Mur de droite = 1 et Mur haut = 0 et Mur gauche = 2   \n\nconst dist2 = (o1, o2) => Math.pow(o1.x - o2.x, 2) + Math.pow(o1.y - o2.y, 2);\nconst iterate = bound => ball => {\n  const invincible = ball.invincible ? ball.invincible - 1 : ball.invincible;\n  const coord = ball.coord;\n  const dx = (coord.x + conf.RADIUS > bound.width || coord.x < conf.RADIUS || coord.x + conf.RADIUS < conf.BOUNDLEFT ? -coord.dx : coord.dx) * conf.FRICTION;\n  const dy = coord.dy;\n  if (Math.abs(dx) + Math.abs(dy) < conf.MINMOVE) return {\n    ...ball,\n    invincible,\n    coord: {\n      ...coord,\n      dx: 0,\n      dy: 0\n    }\n  };\n  return {\n    ...ball,\n    invincible,\n    coord: {\n      x: coord.x + dx,\n      y: coord.y + dy,\n      dx,\n      dy\n    }\n  };\n};\nexport const click = state => event => {\n  const {\n    offsetX,\n    offsetY\n  } = event;\n  const target = state.pos.find(p => dist2(p.coord, {\n    x: offsetX,\n    y: offsetY,\n    dx: 0,\n    dy: 0\n  }) < Math.pow(conf.RADIUS, 2) + 100);\n  if (target) {\n    target.coord.dx += Math.random() * 10;\n    target.coord.dy += Math.random() * 10;\n  }\n  return state;\n};\nconst collideBOC = (b, oc) => dist2(b, {\n  x: oc.center.x,\n  y: oc.coord.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS + oc.radius, 2);\nconst collideBORR = (b, or) => dist2(b, {\n  x: or.rightBottom.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.rightBottom.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.rightBottom.x,\n  y: b.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) && b.y > or.leftTop.y && b.y < or.rightBottom.y;\nconst collideBORL = (b, or) => dist2(b, {\n  x: or.leftTop.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.leftTop.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.leftTop.x,\n  y: b.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) && b.y > or.leftTop.y && b.y < or.rightBottom.y;\nconst collideBORU = (b, or) => dist2(b, {\n  x: or.rightBottom.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.leftTop.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: b.x,\n  y: or.leftTop.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) && b.x > or.leftTop.x && b.x < or.rightBottom.x;\nconst collideBORB = (b, or) => dist2(b, {\n  x: or.leftTop.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: or.rightBottom.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) || dist2(b, {\n  x: b.x,\n  y: or.rightBottom.y,\n  dx: 0,\n  dy: 0\n}) < Math.pow(conf.RADIUS, 2) && b.x > or.leftTop.x && b.x < or.rightBottom.x;\nconst collide = (o1, o2) => dist2(o1, o2) < Math.pow(2 * conf.RADIUS, 2);\nconst collideboing = (p1, p2) => {\n  const nx = (p2.x - p1.x) / (2 * conf.RADIUS);\n  const ny = (p2.y - p1.y) / (2 * conf.RADIUS);\n  const gx = -ny;\n  const gy = nx;\n  const v1g = gx * p1.dx + gy * p1.dy;\n  const v2n = nx * p2.dx + ny * p2.dy;\n  const v2g = gx * p2.dx + gy * p2.dy;\n  const v1n = nx * p1.dx + ny * p1.dy;\n  p1.dx = nx * v2n + gx * v1g;\n  p1.dy = ny * v2n + gy * v1g;\n  p2.dx = nx * v1n + gx * v2g;\n  p2.dy = ny * v1n + gy * v2g;\n  p1.x += p1.dx;\n  p1.y += p1.dy;\n  p2.x += p2.dx;\n  p2.y += p2.dy;\n};\nconst collideboingS = (p1, p2) => {\n  const nx = (p2.center.x - p1.x) / (2 * conf.RADIUS);\n  const ny = (p2.center.y - p1.y) / (2 * conf.RADIUS);\n  const gx = -ny;\n  const gy = nx;\n  const v1g = gx * p1.dx + gy * p1.dy;\n  const v1n = nx * p1.dx + ny * p1.dy;\n  p1.dx -= 2 * nx + gx * v1g;\n  p1.dy -= 2 * ny + gy * v1g;\n  p1.x += p1.dx;\n  p1.y += p1.dy;\n};\nexport const step = state => {\n  state.pos.map((p1, i, arr) => {\n    arr.slice(i + 1).map(p2 => {\n      if (collide(p1.coord, p2.coord)) {\n        if (!p1.invincible) {\n          p1.life--;\n          p1.invincible = 20;\n        }\n        if (!p2.invincible) {\n          p2.life--;\n          p2.invincible = 20;\n        }\n        collideboing(p1.coord, p2.coord);\n      }\n    });\n  });\n  state.pos.map(p1 => {\n    state.objectR.map(w => {\n      p1.coord.dx = collideBORR(p1.coord, w) || collideBORL(p1.coord, w) ? -p1.coord.dx : p1.coord.dx;\n      p1.coord.dy = collideBORU(p1.coord, w) || collideBORB(p1.coord, w) ? -p1.coord.dy : p1.coord.dy;\n    });\n  });\n  state.pos.map(p1 => {\n    state.objectC.map(c => {\n      if (collideBOC(p1.coord, c)) {\n        collideboingS(p1.coord, c);\n      }\n    });\n  });\n\n  // Gestion du délai de tir\n  const shootingDelay = 60;\n  if (state.shootCooldownHero <= 0) {\n    state.tirs.push({\n      life: 1,\n      coord: {\n        x: state.hero.coord.x,\n        y: state.hero.coord.y,\n        dx: 0,\n        dy: -2\n      }\n    });\n    state.shootCooldownHero = shootingDelay;\n  } else {\n    state.shootCooldownHero--;\n  }\n\n  //Gestion du délai d'apparition d'ennemis\n  const appearanceDelay = 100;\n  return {\n    ...state,\n    pos: state.pos.map(iterate(state.size)).filter(p => p.life > 0),\n    tirs: state.tirs.map(iterate(state.size)).filter(p => p.coord.y > 0)\n  };\n};\nexport const handleKeyPress = state => event => {\n  const stepx = state.hero.coord.dx;\n  const stepy = state.hero.coord.dy;\n  const ax = state.hero.coord.x;\n  const ay = state.hero.coord.y;\n  const hx = state.hero.hitBox.hx / 2;\n  const hy = state.hero.hitBox.hy / 2;\n  switch (event.key) {\n    case \"z\":\n      console.log(state.limite);\n      if (ay - stepy - hy > state.limite[0].rightBottom.y) {\n        return {\n          ...state,\n          hero: {\n            ...state.hero,\n            coord: {\n              ...state.hero.coord,\n              y: ay - stepy\n            }\n          }\n        };\n      }\n      return state;\n    case \"s\":\n    case \"S\":\n      console.log(\"s\");\n      if (ay + stepy + hy < state.limite[3].leftTop.y) {\n        return {\n          ...state,\n          hero: {\n            ...state.hero,\n            coord: {\n              ...state.hero.coord,\n              y: ay + stepy\n            }\n          }\n        };\n      }\n      return state;\n    case \"q\":\n    case \"Q\":\n      console.log(\"q\");\n      if (ax - stepx - hx > state.limite[1].rightBottom.x) {\n        return {\n          ...state,\n          hero: {\n            ...state.hero,\n            coord: {\n              ...state.hero.coord,\n              x: ax - stepx\n            }\n          }\n        };\n      }\n      return state;\n    case \"d\":\n    case \"D\":\n      console.log(\"d\");\n      if (ax + stepx + hx < state.limite[2].leftTop.x) {\n        return {\n          ...state,\n          hero: {\n            ...state.hero,\n            coord: {\n              ...state.hero.coord,\n              x: ax + stepx\n            }\n          }\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\nexport const mouseMove = state => event => {\n  return state;\n};\nexport const endOfGame = state => true;","map":{"version":3,"names":["conf","dist2","o1","o2","Math","pow","x","y","iterate","bound","ball","invincible","coord","dx","RADIUS","width","BOUNDLEFT","FRICTION","dy","abs","MINMOVE","click","state","event","offsetX","offsetY","target","pos","find","p","random","collideBOC","b","oc","center","radius","collideBORR","or","rightBottom","leftTop","collideBORL","collideBORU","collideBORB","collide","collideboing","p1","p2","nx","ny","gx","gy","v1g","v2n","v2g","v1n","collideboingS","step","map","i","arr","slice","life","objectR","w","objectC","c","shootingDelay","shootCooldownHero","tirs","push","hero","appearanceDelay","size","filter","handleKeyPress","stepx","stepy","ax","ay","hx","hitBox","hy","key","console","log","limite","mouseMove","endOfGame"],"sources":["/home/ronald/Documents/STL-S2/CPA/ProjetCPAJeu/web/src/components/canvas/state.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport * as conf from './conf'\ntype Coord = { x: number; y: number; dx: number; dy: number }\nexport type Point = {x:number; y: number}\ntype Ball = { coord: Coord; life: number; invincible?: number }\ntype Size = { height: number; width: number }\ntype Wall = { leftTop:Point, rightBottom:Point}\ntype ObjectCercle = {coord: Coord; radius: number}\ntype Rectangle = {p1: Point, width:number, height:number}\ntype Hero = {coord: Coord, hitBox: {hx: number, hy: number}, vie: number, force : number}\n\n// Mur de droite = 1 et Mur haut = 0 et Mur gauche = 2   \n\nexport type State = {\n  hero : Hero\n  pos: Array<Ball>\n  limite: Array<Wall>\n  objectC: Array<ObjectCercle>\n  objectR: Array<Wall>\n  size: Size\n  endOfGame: boolean\n  tirs: Array<Ball>\n  debris: Array<Ball>\n  shootCooldownHero : number\n  ennemyDelay : number\n}\n\nconst dist2 = (o1: Coord, o2: Coord) =>\n  Math.pow(o1.x - o2.x, 2) + Math.pow(o1.y - o2.y, 2)\n\nconst iterate = (bound: Size) => (ball: Ball) => {\n  const invincible = ball.invincible ? ball.invincible - 1 : ball.invincible\n  const coord = ball.coord\n  const dx =\n    (coord.x + conf.RADIUS > bound.width || coord.x < conf.RADIUS || coord.x + conf.RADIUS < conf.BOUNDLEFT\n      ? -coord.dx\n      : coord.dx) * conf.FRICTION\n  const dy = coord.dy\n\n\n\n  if (Math.abs(dx) + Math.abs(dy) < conf.MINMOVE)\n    return { ...ball, invincible, coord: { ...coord, dx: 0, dy: 0 } }\n  return {\n    ...ball,\n    invincible,\n    coord: {\n      x: coord.x + dx,\n      y: coord.y + dy,\n      dx,\n      dy,\n    },\n  }\n}\n\nexport const click =\n  (state: State) =>\n  (event: PointerEvent): State => {\n    const { offsetX, offsetY } = event\n    const target = state.pos.find(\n      (p) =>\n        dist2(p.coord, { x: offsetX, y: offsetY, dx: 0, dy: 0 }) <\n        Math.pow(conf.RADIUS, 2) + 100\n    )\n    if (target) {\n      target.coord.dx += Math.random() * 10\n      target.coord.dy += Math.random() * 10\n    }\n    return state\n  }\n\n\nconst collideBOC = (b:Coord, oc:ObjectCercle) => \n  dist2(b, {x: oc.center.x, y: oc.coord.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS+oc.radius, 2)\n\n  \nconst collideBORR = (b:Coord, or:Wall) => \n  ((dist2(b, {x: or.rightBottom.x, y: or.leftTop.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \n  (dist2(b, {x: or.rightBottom.x, y: or.rightBottom.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2))) || \n  (dist2(b, {x: or.rightBottom.x, y:b.y, dx:0, dy:0}) < Math.pow(conf.RADIUS,2) && b.y > or.leftTop.y && b.y < or.rightBottom.y)\n\nconst collideBORL = (b:Coord, or: Wall) => \n  (dist2(b, {x: or.leftTop.x, y: or.rightBottom.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \n  (dist2(b, {x: or.leftTop.x, y: or.leftTop.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \n  (dist2(b, {x: or.leftTop.x, y:b.y, dx:0, dy:0}) < Math.pow(conf.RADIUS,2) && b.y > or.leftTop.y && b.y < or.rightBottom.y)\n\nconst collideBORU = (b:Coord, or:Wall) =>\n  (dist2(b, {x: or.rightBottom.x, y: or.leftTop.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \n  (dist2(b, {x: or.leftTop.x, y: or.leftTop.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \n  (dist2(b, {x: b.x, y:or.leftTop.y, dx:0, dy:0}) < Math.pow(conf.RADIUS,2) && b.x > or.leftTop.x && b.x < or.rightBottom.x) \n\n\nconst collideBORB = (b:Coord, or:Wall) =>\n  (dist2(b, {x: or.leftTop.x, y: or.rightBottom.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \n  (dist2(b, {x: or.rightBottom.x, y: or.rightBottom.y, dx: 0, dy: 0}) < Math.pow(conf.RADIUS, 2)) || \n  (dist2(b, {x: b.x, y:or.rightBottom.y, dx:0, dy:0}) < Math.pow(conf.RADIUS,2) && b.x > or.leftTop.x && b.x < or.rightBottom.x) \n\n\nconst collide = (o1: Coord, o2: Coord) =>\n  dist2(o1, o2) < Math.pow(2 * conf.RADIUS, 2)\n\nconst collideboing = (p1: Coord, p2: Coord) => {\n  const nx = (p2.x - p1.x) / (2 * conf.RADIUS)\n  const ny = (p2.y - p1.y) / (2 * conf.RADIUS)\n  const gx = -ny\n  const gy = nx\n\n  const v1g = gx * p1.dx + gy * p1.dy\n  const v2n = nx * p2.dx + ny * p2.dy\n  const v2g = gx * p2.dx + gy * p2.dy\n  const v1n = nx * p1.dx + ny * p1.dy\n  p1.dx = nx * v2n + gx * v1g\n  p1.dy = ny * v2n + gy * v1g\n  p2.dx = nx * v1n + gx * v2g\n  p2.dy = ny * v1n + gy * v2g\n  p1.x += p1.dx\n  p1.y += p1.dy\n  p2.x += p2.dx\n  p2.y += p2.dy\n}\n\nconst collideboingS = (p1: Coord, p2:ObjectCercle) => {\n  const nx = (p2.center.x-p1.x) / (2 * conf.RADIUS)\n  const ny = (p2.center.y-p1.y) / (2 * conf.RADIUS)\n  const gx = -ny\n  const gy = nx\n\n  const v1g = gx * p1.dx + gy * p1.dy\n  const v1n = nx * p1.dx + ny * p1.dy\n  p1.dx -= 2 * nx  + gx * v1g\n  p1.dy -= 2 * ny  + gy * v1g\n  p1.x += p1.dx\n  p1.y += p1.dy\n}\n\nexport const step = (state: State) => {\n    \n  state.pos.map((p1, i, arr) => {\n    arr.slice(i + 1).map((p2) => {\n      if (collide(p1.coord, p2.coord)) {\n        if (!p1.invincible) {\n          p1.life--\n          p1.invincible = 20\n        }\n        if (!p2.invincible) {\n          p2.life--\n          p2.invincible = 20\n        }\n        collideboing(p1.coord, p2.coord)\n      }\n    })\n  })\n\n  state.pos.map((p1) => {\n    state.objectR.map((w) => {\n      p1.coord.dx = \n      (collideBORR(p1.coord, w) || collideBORL(p1.coord, w)\n      ? -p1.coord.dx\n      : p1.coord.dx)\n      p1.coord.dy = \n      (collideBORU(p1.coord, w) || collideBORB(p1.coord, w)\n      ? -p1.coord.dy\n      : p1.coord.dy)\n    })\n  })\n  \n  state.pos.map((p1) => {\n    state.objectC.map((c) => {\n      if (collideBOC(p1.coord, c)){\n        collideboingS(p1.coord, c)\n      }\n    })\n  })\n\n  // Gestion du délai de tir\n  const shootingDelay = 60; \n\n  if (state.shootCooldownHero <= 0) {\n    state.tirs.push({\n      life: 1,\n      coord: {\n        x: state.hero.coord.x,\n        y: state.hero.coord.y,\n        dx: 0,\n        dy: -2,\n      },\n    });\n    state.shootCooldownHero = shootingDelay;\n  } else {\n    state.shootCooldownHero--;\n  }\n\n  //Gestion du délai d'apparition d'ennemis\n  const appearanceDelay = 100;\n\n\n  return {\n    ...state,\n    pos: state.pos.map(iterate(state.size)).filter((p) => p.life > 0),\n    tirs: state.tirs.map(iterate(state.size)).filter((p) => p.coord.y > 0)\n  }\n}\n\nexport const handleKeyPress = \n  (state: State) =>\n    (event: KeyboardEvent):State => { \n        const stepx = state.hero.coord.dx;\n        const stepy = state.hero.coord.dy;\n        const ax = state.hero.coord.x;\n        const ay = state.hero.coord.y;\n        const hx = state.hero.hitBox.hx/2;\n        const hy = state.hero.hitBox.hy/2;\n        switch (event.key) {\n          case \"z\":\n            console.log(state.limite)\n            \n            if (ay - stepy - hy > state.limite[0].rightBottom.y){\n              return {...state, hero:{...state.hero, coord: {...state.hero.coord, y: ay - stepy}}}\n            }\n            return state;\n          case \"s\":\n          case \"S\":\n            console.log(\"s\")\n            if (ay + stepy+ hy< state.limite[3].leftTop.y){\n              return {...state, hero:{...state.hero, coord: {...state.hero.coord, y: ay + stepy}}}\n            }\n            return state;\n          case \"q\":\n          case \"Q\":\n            console.log(\"q\")\n            if (ax - stepx - hx> state.limite[1].rightBottom.x){\n              return {...state, hero:{...state.hero, coord: {...state.hero.coord, x: ax - stepx}}}\n            }\n            return state;\n          case \"d\":\n          case \"D\":\n            console.log(\"d\")\n            if (ax + stepx + hx < state.limite[2].leftTop.x){\n              return {...state, hero:{...state.hero, coord: {...state.hero.coord, x: ax + stepx}}}\n            }\n            return state;\n          default : \n            return state\n        }\n      }\n\nexport const mouseMove =\n  (state: State) =>\n  (event: PointerEvent): State => {\n    return state\n  }\n\nexport const endOfGame = (state: State): boolean => true\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}